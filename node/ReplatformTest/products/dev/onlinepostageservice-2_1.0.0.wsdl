<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:olpwsdl="http://www.royalmailgroup.com/WSDLapi/onlinePostage/V1" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:olp="http://www.royalmailgroup.com/api/onlinePostage/V1" xmlns:ns2="http://www.royalmailgroup.com/cm/rmDatatypes/V1" xmlns:rd="http://www.royalmailgroup.com/cm/referenceData/V2" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:int="http://www.royalmailgroup.com/integration/core/V1" xmlns:ns1="http://www.w3.org/2000/09/xmldsig#" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:ns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" targetNamespace="http://www.royalmailgroup.com/WSDLapi/onlinePostage/V1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" version="0.2">
      <xsd:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" />
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
      <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" />
      <xsd:complexType name="AttributedString">
        <xsd:annotation>
          <xsd:documentation>This type represents an element with arbitrary attributes.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute ref="wsu:Id" />
            <xsd:anyAttribute namespace="##other" processContents="lax" />
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PasswordString">
        <xsd:annotation>
          <xsd:documentation>This type is used for password elements per Section 4.1.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
          <xsd:extension base="wsse:AttributedString">
            <xsd:attribute name="Type" type="xsd:anyURI" />
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EncodedString">
        <xsd:annotation>
          <xsd:documentation>This type is used for elements containing stringified binary data.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
          <xsd:extension base="wsse:AttributedString">
            <xsd:attribute name="EncodingType" type="xsd:anyURI" />
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="UsernameTokenType">
        <xsd:annotation>
          <xsd:documentation>This type represents a username token per Section 4.1</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="Username" type="wsse:AttributedString" />
          <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xsd:sequence>
        <xsd:attribute ref="wsu:Id" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
      </xsd:complexType>
      <xsd:complexType name="BinarySecurityTokenType">
        <xsd:annotation>
          <xsd:documentation>A security token that is encoded in binary</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
          <xsd:extension base="wsse:EncodedString">
            <xsd:attribute name="ValueType" type="xsd:anyURI" />
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="KeyIdentifierType">
        <xsd:annotation>
          <xsd:documentation>A security token key identifier</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
          <xsd:extension base="wsse:EncodedString">
            <xsd:attribute name="ValueType" type="xsd:anyURI" />
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="tUsage">
        <xsd:annotation>
          <xsd:documentation>Typedef to allow a list of usages (as URIs).</xsd:documentation>
        </xsd:annotation>
        <xsd:list itemType="xsd:anyURI" />
      </xsd:simpleType>
      <xsd:attribute name="Usage" type="wsse:tUsage">
        <xsd:annotation>
          <xsd:documentation>This global attribute is used to indicate the usage of a referenced or indicated token within the containing context</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:complexType name="ReferenceType">
        <xsd:annotation>
          <xsd:documentation>This type represents a reference to an external security token.</xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="URI" type="xsd:anyURI" />
        <xsd:attribute name="ValueType" type="xsd:anyURI" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
      </xsd:complexType>
      <xsd:complexType name="EmbeddedType">
        <xsd:annotation>
          <xsd:documentation>This type represents a reference to an embedded security token.</xsd:documentation>
        </xsd:annotation>
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:any processContents="lax" />
        </xsd:choice>
        <xsd:attribute name="ValueType" type="xsd:anyURI" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
      </xsd:complexType>
      <xsd:complexType name="SecurityTokenReferenceType">
        <xsd:annotation>
          <xsd:documentation>This type is used reference a security token.</xsd:documentation>
        </xsd:annotation>
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:any processContents="lax" />
        </xsd:choice>
        <xsd:attribute ref="wsu:Id" />
        <xsd:attribute ref="wsse:Usage" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
      </xsd:complexType>
      <xsd:complexType name="SecurityHeaderType">
        <xsd:annotation>
          <xsd:documentation>This complexType defines header block to use for security-relevant data directed at a specific SOAP actor.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="lax">
            <xsd:annotation>
              <xsd:documentation>The use of "any" is to allow extensibility and different forms of security data.</xsd:documentation>
            </xsd:annotation>
          </xsd:any>
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax" />
      </xsd:complexType>
      <xsd:complexType name="TransformationParametersType">
        <xsd:annotation>
          <xsd:documentation>This complexType defines a container for elements to be specified from any namespace as properties/parameters of a DSIG transformation.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="lax">
            <xsd:annotation>
              <xsd:documentation>The use of "any" is to allow extensibility from any namespace.</xsd:documentation>
            </xsd:annotation>
          </xsd:any>
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax" />
      </xsd:complexType>
      <xsd:element name="UsernameToken" type="wsse:UsernameTokenType">
        <xsd:annotation>
          <xsd:documentation>This element defines the wsse:UsernameToken element per Section 4.1.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="BinarySecurityToken" type="wsse:BinarySecurityTokenType">
        <xsd:annotation>
          <xsd:documentation>This element defines the wsse:BinarySecurityToken element per Section 4.2.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Reference" type="wsse:ReferenceType">
        <xsd:annotation>
          <xsd:documentation>This element defines a security token reference</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Embedded" type="wsse:EmbeddedType">
        <xsd:annotation>
          <xsd:documentation>This element defines a security token embedded reference</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="KeyIdentifier" type="wsse:KeyIdentifierType">
        <xsd:annotation>
          <xsd:documentation>This element defines a key identifier reference</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="SecurityTokenReference" type="wsse:SecurityTokenReferenceType">
        <xsd:annotation>
          <xsd:documentation>This element defines the wsse:SecurityTokenReference per Section 4.3.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Security" type="wsse:SecurityHeaderType">
        <xsd:annotation>
          <xsd:documentation>This element defines the wsse:Security SOAP header element per Section 4.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="TransformationParameters" type="wsse:TransformationParametersType">
        <xsd:annotation>
          <xsd:documentation>This element contains properties for transformations from any namespace, including DSIG.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Password" type="wsse:PasswordString" />
      <xsd:element name="Nonce" type="wsse:EncodedString" />
      <xsd:simpleType name="FaultcodeEnum">
        <xsd:restriction base="xsd:QName">
          <xsd:enumeration value="wsse:UnsupportedSecurityToken" />
          <xsd:enumeration value="wsse:UnsupportedAlgorithm" />
          <xsd:enumeration value="wsse:InvalidSecurity" />
          <xsd:enumeration value="wsse:InvalidSecurityToken" />
          <xsd:enumeration value="wsse:FailedAuthentication" />
          <xsd:enumeration value="wsse:FailedCheck" />
          <xsd:enumeration value="wsse:SecurityTokenUnavailable" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1">
      <xsd:simpleType name="CryptoBinary">
        <xsd:restriction base="xsd:base64Binary" />
      </xsd:simpleType>
      <xsd:element name="Signature" type="ds:SignatureType" />
      <xsd:complexType name="SignatureType">
        <xsd:sequence>
          <xsd:element ref="ds:SignedInfo" />
          <xsd:element ref="ds:SignatureValue" />
          <xsd:element minOccurs="0" ref="ds:KeyInfo" />
          <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ds:Object" />
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
      </xsd:complexType>
      <xsd:element name="SignatureValue" type="ds:SignatureValueType" />
      <xsd:complexType name="SignatureValueType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:base64Binary">
            <xsd:attribute name="Id" type="xsd:ID" use="optional" />
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:element name="SignedInfo" type="ds:SignedInfoType" />
      <xsd:complexType name="SignedInfoType">
        <xsd:sequence>
          <xsd:element ref="ds:CanonicalizationMethod" />
          <xsd:element ref="ds:SignatureMethod" />
          <xsd:element maxOccurs="unbounded" ref="ds:Reference" />
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
      </xsd:complexType>
      <xsd:element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType" />
      <xsd:complexType name="CanonicalizationMethodType" mixed="true">
        <xsd:sequence>
          <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##any" />
        </xsd:sequence>
        <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required" />
      </xsd:complexType>
      <xsd:element name="SignatureMethod" type="ds:SignatureMethodType" />
      <xsd:complexType name="SignatureMethodType" mixed="true">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="HMACOutputLength" type="ds:HMACOutputLengthType" />
          <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##other" />
        </xsd:sequence>
        <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required" />
      </xsd:complexType>
      <xsd:element name="Reference" type="ds:ReferenceType" />
      <xsd:complexType name="ReferenceType">
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="ds:Transforms" />
          <xsd:element ref="ds:DigestMethod" />
          <xsd:element ref="ds:DigestValue" />
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
        <xsd:attribute name="URI" type="xsd:anyURI" use="optional" />
        <xsd:attribute name="Type" type="xsd:anyURI" use="optional" />
      </xsd:complexType>
      <xsd:element name="Transforms" type="ds:TransformsType" />
      <xsd:complexType name="TransformsType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" ref="ds:Transform" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="Transform" type="ds:TransformType" />
      <xsd:complexType name="TransformType" mixed="true">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:any namespace="##other" processContents="lax" />
          <xsd:element name="XPath" type="xsd:string" />
        </xsd:choice>
        <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required" />
      </xsd:complexType>
      <xsd:element name="DigestMethod" type="ds:DigestMethodType" />
      <xsd:complexType name="DigestMethodType" mixed="true">
        <xsd:sequence>
          <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xsd:sequence>
        <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required" />
      </xsd:complexType>
      <xsd:element name="DigestValue" type="ds:DigestValueType" />
      <xsd:simpleType name="DigestValueType">
        <xsd:restriction base="xsd:base64Binary" />
      </xsd:simpleType>
      <xsd:element name="KeyInfo" type="ds:KeyInfoType" />
      <xsd:complexType name="KeyInfoType" mixed="true">
        <xsd:choice maxOccurs="unbounded">
          <xsd:element ref="ds:KeyName" />
          <xsd:element ref="ds:KeyValue" />
          <xsd:element ref="ds:RetrievalMethod" />
          <xsd:element ref="ds:X509Data" />
          <xsd:element ref="ds:PGPData" />
          <xsd:element ref="ds:SPKIData" />
          <xsd:element ref="ds:MgmtData" />
          <xsd:any namespace="##other" processContents="lax" />
        </xsd:choice>
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
      </xsd:complexType>
      <xsd:element name="KeyName" type="xsd:string" />
      <xsd:element name="MgmtData" type="xsd:string" />
      <xsd:element name="KeyValue" type="ds:KeyValueType" />
      <xsd:complexType name="KeyValueType" mixed="true">
        <xsd:choice>
          <xsd:element ref="ds:DSAKeyValue" />
          <xsd:element ref="ds:RSAKeyValue" />
          <xsd:any namespace="##other" processContents="lax" />
        </xsd:choice>
      </xsd:complexType>
      <xsd:element name="RetrievalMethod" type="ds:RetrievalMethodType" />
      <xsd:complexType name="RetrievalMethodType">
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="ds:Transforms" />
        </xsd:sequence>
        <xsd:attribute name="URI" type="xsd:anyURI" />
        <xsd:attribute name="Type" type="xsd:anyURI" use="optional" />
      </xsd:complexType>
      <xsd:element name="X509Data" type="ds:X509DataType" />
      <xsd:complexType name="X509DataType">
        <xsd:sequence maxOccurs="unbounded">
          <xsd:choice>
            <xsd:element name="X509IssuerSerial" type="ds:X509IssuerSerialType" />
            <xsd:element name="X509SKI" type="xsd:base64Binary" />
            <xsd:element name="X509SubjectName" type="xsd:string" />
            <xsd:element name="X509Certificate" type="xsd:base64Binary" />
            <xsd:element name="X509CRL" type="xsd:base64Binary" />
            <xsd:any namespace="##other" processContents="lax" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="X509IssuerSerialType">
        <xsd:sequence>
          <xsd:element name="X509IssuerName" type="xsd:string" />
          <xsd:element name="X509SerialNumber" type="xsd:integer" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="PGPData" type="ds:PGPDataType" />
      <xsd:complexType name="PGPDataType">
        <xsd:choice>
          <xsd:sequence>
            <xsd:element name="PGPKeyID" type="xsd:base64Binary" />
            <xsd:element minOccurs="0" name="PGPKeyPacket" type="xsd:base64Binary" />
            <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
          </xsd:sequence>
          <xsd:sequence>
            <xsd:element name="PGPKeyPacket" type="xsd:base64Binary" />
            <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
          </xsd:sequence>
        </xsd:choice>
      </xsd:complexType>
      <xsd:element name="SPKIData" type="ds:SPKIDataType" />
      <xsd:complexType name="SPKIDataType">
        <xsd:sequence maxOccurs="unbounded">
          <xsd:element name="SPKISexp" type="xsd:base64Binary" />
          <xsd:any minOccurs="0" namespace="##other" processContents="lax" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="Object" type="ds:ObjectType" />
      <xsd:complexType name="ObjectType" mixed="true">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
          <xsd:any namespace="##any" processContents="lax" />
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
        <xsd:attribute name="MimeType" type="xsd:string" use="optional" />
        <xsd:attribute name="Encoding" type="xsd:anyURI" use="optional" />
      </xsd:complexType>
      <xsd:element name="Manifest" type="ds:ManifestType" />
      <xsd:complexType name="ManifestType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" ref="ds:Reference" />
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
      </xsd:complexType>
      <xsd:element name="SignatureProperties" type="ds:SignaturePropertiesType" />
      <xsd:complexType name="SignaturePropertiesType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" ref="ds:SignatureProperty" />
        </xsd:sequence>
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
      </xsd:complexType>
      <xsd:element name="SignatureProperty" type="ds:SignaturePropertyType" />
      <xsd:complexType name="SignaturePropertyType" mixed="true">
        <xsd:choice maxOccurs="unbounded">
          <xsd:any namespace="##other" processContents="lax" />
        </xsd:choice>
        <xsd:attribute name="Target" type="xsd:anyURI" use="required" />
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
      </xsd:complexType>
      <xsd:simpleType name="HMACOutputLengthType">
        <xsd:restriction base="xsd:integer" />
      </xsd:simpleType>
      <xsd:element name="DSAKeyValue" type="ds:DSAKeyValueType" />
      <xsd:complexType name="DSAKeyValueType">
        <xsd:sequence>
          <xsd:sequence minOccurs="0">
            <xsd:element name="P" type="ds:CryptoBinary" />
            <xsd:element name="Q" type="ds:CryptoBinary" />
          </xsd:sequence>
          <xsd:element minOccurs="0" name="G" type="ds:CryptoBinary" />
          <xsd:element name="Y" type="ds:CryptoBinary" />
          <xsd:element minOccurs="0" name="J" type="ds:CryptoBinary" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Seed" type="ds:CryptoBinary" />
            <xsd:element name="PgenCounter" type="ds:CryptoBinary" />
          </xsd:sequence>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="RSAKeyValue" type="ds:RSAKeyValueType" />
      <xsd:complexType name="RSAKeyValueType">
        <xsd:sequence>
          <xsd:element name="Modulus" type="ds:CryptoBinary" />
          <xsd:element name="Exponent" type="ds:CryptoBinary" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xs:schema attributeFormDefault="unqualified" blockDefault="" finalDefault="" elementFormDefault="unqualified" targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:annotation>
        <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.
  </xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .&gt;
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/&gt;

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .&gt;
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/&gt;
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.
  </xs:documentation>
      </xs:annotation>
      <xs:attribute name="lang" type="xs:language">
        <xs:annotation>
          <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute default="preserve" name="space">
        <xs:simpleType>
          <xs:restriction base="xs:NCName">
            <xs:enumeration value="default" />
            <xs:enumeration value="preserve" />
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="base" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup name="specialAttrs">
        <xs:attribute ref="xml:base" />
        <xs:attribute ref="xml:lang" />
        <xs:attribute ref="xml:space" />
      </xs:attributeGroup>
    </xs:schema>
    <xsd:schema xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" version="0.1">
      <xsd:simpleType name="tTimestampFault">
        <xsd:annotation>
          <xsd:documentation>This type defines the fault code value for Timestamp message expiration.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:QName">
          <xsd:enumeration value="wsu:MessageExpired" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:attribute name="Id" type="xsd:ID">
        <xsd:annotation>
          <xsd:documentation>This global attribute supports annotating arbitrary elements with an ID.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attributeGroup name="commonAtts">
        <xsd:annotation>
          <xsd:documentation>Convenience attribute group used to simplify this schema.</xsd:documentation>
        </xsd:annotation>
        <xsd:attribute ref="wsu:Id" use="optional" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
      </xsd:attributeGroup>
      <xsd:complexType name="AttributedDateTime">
        <xsd:annotation>
          <xsd:documentation>This type is for elements whose [children]is a psuedo-dateTime and can have arbitrary attributes. </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attributeGroup ref="wsu:commonAtts" />
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="AttributedURI">
        <xsd:annotation>
          <xsd:documentation>This type is for elements whose [children]is an anyURI and can have arbitrary attributes.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
          <xsd:extension base="xsd:anyURI">
            <xsd:attributeGroup ref="wsu:commonAtts" />
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="TimestampType">
        <xsd:annotation>
          <xsd:documentation>This complex type ties together the timestamp related elements into a composite type.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="wsu:Created" />
          <xsd:element minOccurs="0" ref="wsu:Expires" />
          <xsd:choice minOccurs="0" maxOccurs="unbounded">
            <xsd:any namespace="##other" processContents="lax" />
          </xsd:choice>
        </xsd:sequence>
        <xsd:attributeGroup ref="wsu:commonAtts" />
      </xsd:complexType>
      <xsd:element name="Timestamp" type="wsu:TimestampType">
        <xsd:annotation>
          <xsd:documentation>This element allows Timestamps to be applied anywhere element wildcards are present,including as a SOAP header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Expires" type="wsu:AttributedDateTime">
        <xsd:annotation>
          <xsd:documentation>This element allows an expiration time to be applied anywhere element wildcards are present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Created" type="wsu:AttributedDateTime">
        <xsd:annotation>
          <xsd:documentation>This element allows a creation time to be applied anywhere element wildcards are present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:schema>
    <xs:schema xmlns:dt="http://www.royalmailgroup.com/cm/rmDatatypes/V1" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://www.royalmailgroup.com/integration/core/V1" version="1.5" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://www.royalmailgroup.com/cm/rmDatatypes/V1" />
      <xs:simpleType name="applicationId">
        <xs:annotation>
          <xs:documentation>For a request, this is the ID of the Service Requester calling the service, unique when combined with the TransactionId. For the response, this is the ID of the Service Provider, unique when combined with the TransactionId.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="dt:identifier">
          <xs:maxLength value="50" />
          <xs:whiteSpace value="preserve" />
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="transactionId">
        <xs:annotation>
          <xs:documentation>Id preserved throughout the lifespan of the transaction, unique when combined with the applicationId and intermediaryId (if applicable).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="dt:identifier">
          <xs:maxLength value="50" />
          <xs:whiteSpace value="preserve" />
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="identificationStructure">
        <xs:sequence>
          <xs:element minOccurs="0" name="endUserId" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>User ID associated with the end user of the internal or external organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="applicationId" type="int:applicationId">
            <xs:annotation>
              <xs:documentation>The ID of the Service Requester system calling the service, unique when combined with the TransactionId.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="intermediaryId" type="int:applicationId">
            <xs:annotation>
              <xs:documentation>Id associated with the Intermediary application (if applicable).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="transactionId" type="int:transactionId">
            <xs:annotation>
              <xs:documentation>Unique session id sent by the Service Requestor (for the request) or returned by the Service Provider (for the response)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="integrationHeader">
        <xs:annotation>
          <xs:documentation>Common integration header definition</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="dateTime" type="dt:dateTime">
            <xs:annotation>
              <xs:documentation>Date timestamp associated with when the data was generated, sent or received</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="version" type="dt:decimal">
            <xs:annotation>
              <xs:documentation>Version of the service</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="identification" type="int:identificationStructure">
            <xs:annotation>
              <xs:documentation>Identification details associated with the Service Requestor or Service Provider</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="testFlag" type="dt:boolean">
            <xs:annotation>
              <xs:documentation>Flag which can be used to test that the exposed service is available. It is not expected that this flag will be used under normal BAU service operation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debugFlag" type="dt:boolean">
            <xs:annotation>
              <xs:documentation>Flag which can be used to allow any messages to be dynamically debugged by service requester</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:annotation>
          <xs:documentation>Code asociated with the error condition in the form ENNNN</xs:documentation>
        </xs:annotation>
        <xs:restriction base="dt:identifier">
          <xs:pattern value="[E]{1}[0-9]{4}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="warningCode">
        <xs:annotation>
          <xs:documentation>Code asociated with the warning condition in the form WNNNN</xs:documentation>
        </xs:annotation>
        <xs:restriction base="dt:identifier">
          <xs:pattern value="[W]{1}[0-9]{4}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element name="errorCode" type="int:errorCode">
            <xs:annotation>
              <xs:documentation>Code asociated with the error condition</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="errorDescription" type="dt:description">
            <xs:annotation>
              <xs:documentation>Description of the error condition</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="errorCause" type="dt:description">
            <xs:annotation>
              <xs:documentation>Cause of the business error (if known)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="errorResolution" type="dt:description">
            <xs:annotation>
              <xs:documentation>Description of the resolution and action required to correct the error</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="errorContext" nillable="true" type="dt:description">
            <xs:annotation>
              <xs:documentation>Context of the business error, e.g. client or server</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorStructure">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="error" type="int:errorDetail" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="warningDetail">
        <xs:sequence>
          <xs:element name="warningCode" type="int:warningCode">
            <xs:annotation>
              <xs:documentation>Code asociated with the warning</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="warningDescription" type="dt:description">
            <xs:annotation>
              <xs:documentation>Description of the warning</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="warningCause" type="dt:description">
            <xs:annotation>
              <xs:documentation>Cause of the warning (if known)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="warningResolution" type="dt:description">
            <xs:annotation>
              <xs:documentation>Description of the resolution and action required to correct the warning</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="warningContext" nillable="true" type="dt:description">
            <xs:annotation>
              <xs:documentation>Context of the warning, e.g. client or server</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="warningStructure">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="warning" type="int:warningDetail" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="integrationFooter">
        <xs:annotation>
          <xs:documentation>Common integration footer definition</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="errors" type="int:errorStructure" />
          <xs:element minOccurs="0" name="warnings" type="int:warningStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="integrationHeader" type="int:integrationHeader" />
      <xs:element name="integrationFooter" type="int:integrationFooter" />
    </xs:schema>
    <xs:schema xmlns:dt="http://www.royalmailgroup.com/cm/rmDatatypes/V1" targetNamespace="http://www.royalmailgroup.com/cm/rmDatatypes/V1" version="V1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:simpleType name="description">
        <xs:annotation>
          <xs:documentation>A description is a sub-type of string and is statement in words that gives an account or descriptive representation of a thing. Descriptions are only editable via an admin function and are for display and information purposes only for end users.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="256" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="float">
        <xs:annotation>
          <xs:documentation>A float describes a data type for representing an approximation to real numbers in a way that can support a wide range of values. The numbers are, in general, represented approximately to a fixed number of significant digits (the mantissa) and scaled using an exponent. The base for the scaling is normally 2, 10 or 16.For example, the numbers 5.5, 0.001, and -2,345.6789 are floating point numbers. </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:float" />
      </xs:simpleType>
      <xs:simpleType name="geoSpatial">
        <xs:annotation>
          <xs:documentation>A decimal data type representing Latitude and Longitude data. The format of decimal 10,7 was chosen as a generic representation which facilities conversion between geospatial systems</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
          <xs:fractionDigits value="7" />
          <xs:totalDigits value="10" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="identifier">
        <xs:annotation>
          <xs:documentation>An identifier is a sub-type of string which serves as a means of identification for a particular thing; An identifier can be associated with a name. </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="128" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="integer">
        <xs:annotation>
          <xs:documentation>An integer is a whole number (not a fraction) that can be positive, negative, or zero. Unlike floats, integers cannot have decimal places.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:integer" />
      </xs:simpleType>
      <xs:simpleType name="longDescription">
        <xs:annotation>
          <xs:documentation>A long description is a sub-type of string and is a longer version of a description (see definition of description) and is used to expand a description. Descriptions are only editable via an admin function and are for display and information purposes only for end users.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="512" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="longName">
        <xs:annotation>
          <xs:documentation>A long name is a sub-type of string and is word or a combination of words by which an organization, place, or thing, a body or class, or any object of thought is designated, called, or known.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="128" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="name">
        <xs:annotation>
          <xs:documentation>A name is a sub-type of string and is word or a combination of words by which a person, place, or thing, a body or class, or any object of thought is designated, called, or known.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="64" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="cardinal">
        <xs:annotation>
          <xs:documentation>A number indicating a whole number amount as in a count of items. </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:integer" />
      </xs:simpleType>
      <xs:simpleType name="boolean">
        <xs:annotation>
          <xs:documentation>Boolean, or boolean logic, is a subset of algebra used for creating true/false statements. Boolean expressions use the operators AND, OR, XOR, and NOT to compare values and return a true or false result. Boolean values can also be referred to as 'flags'. </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:boolean" />
      </xs:simpleType>
      <xs:simpleType name="comment">
        <xs:annotation>
          <xs:documentation>A comment is a sub-type of string which can be used as a note intended as an explanation, illustration, instruction, capture of an interaction or an annotation. This is free format text which can be input by the end user.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="date">
        <xs:annotation>
          <xs:documentation>A date represents a period in time which could be a particular month, day, and year at which some event happened or will happen. </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:date" />
      </xs:simpleType>
      <xs:simpleType name="dateTime">
        <xs:annotation>
          <xs:documentation>dateTime represents a period in time which could be a particular month, day, and year at which some event happened or will happen but also includes a breakdown of time using hours, minutes, seconds and milliseconds. A dateTime stamp is a common use for this data type so that a precise record of an event can be captured.  </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:dateTime" />
      </xs:simpleType>
      <xs:simpleType name="decimal">
        <xs:annotation>
          <xs:documentation>A decimal data type represents a real number with every decimal place indicating a multiple of a negative power of 10. It represents non-repeating decimal fractions like 0.3 and -1.17 without rounding, and gives the ability to do arithmetic on them.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal" />
      </xs:simpleType>
      <xs:simpleType name="shortDescription">
        <xs:annotation>
          <xs:documentation>A short description is a sub-type of string and is a shorter version of a description (see definition of description) and is used to summarise a longer description. Descriptions are only editable via an admin function and are for display and information purposes only for end users</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="128" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="shortName">
        <xs:annotation>
          <xs:documentation>A name is a sub-type of string and is word or a combination of words by which a person, place, or thing, a body or class, or any object of thought is designated, called, or known. short name is intended for use with Reference data items</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="64" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="string">
        <xs:annotation>
          <xs:documentation>Simple set of alphanumeric characters.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="4000" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="time">
        <xs:annotation>
          <xs:documentation>time is a unit of measure to record hours, minutes, seconds and milliseconds. </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:time" />
      </xs:simpleType>
      <xs:simpleType name="twoDBbarcode">
        <xs:annotation>
          <xs:documentation>Used in the digital representation of 2D Barcodes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:base64Binary" />
      </xs:simpleType>
      <xs:simpleType name="ordinal">
        <xs:annotation>
          <xs:documentation>A number indicating a position as in a sequence number. </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:integer" />
      </xs:simpleType>
      <xs:simpleType name="twoDBarcode">
        <xs:annotation>
          <xs:documentation>Used in the digital representation of 2D Barcodes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:base64Binary" />
      </xs:simpleType>
      <xs:simpleType name="image">
        <xs:annotation>
          <xs:documentation>Used in the digital representation of Images</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:base64Binary" />
      </xs:simpleType>
    </xs:schema>
    <xs:schema xmlns:ci="http://com/royalmail/stampbroker/webservice/requestAndResponse" xmlns:dt="http://www.royalmailgroup.com/cm/rmDatatypes/V1" xmlns:com="http://www.royalmailgroup.com/cm/common/V3" xmlns:soapext="http://www.royalmailgroup.com/soap/extensions/V1" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.royalmailgroup.com/api/onlinePostage/V1" version="V1.2.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://www.royalmailgroup.com/integration/core/V1" />
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" />
      <xs:import namespace="http://www.royalmailgroup.com/cm/common/V3" />
      <xs:import namespace="http://www.royalmailgroup.com/cm/referenceData/V2" />
      <xs:import namespace="http://www.royalmailgroup.com/cm/rmDatatypes/V1" />
      <xs:import namespace="http://www.royalmailgroup.com/soap/extensions/V1" />
      <xs:element name="exceptionDetails" type="olp:exceptionDetails">
        <xs:annotation>
          <xs:documentation>Common exception details structure to report the service soap faults</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contactDetails" type="olp:contactDetails">
        <xs:annotation>
          <xs:documentation>Common contact details definition used to price and create the postage</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="addOnProductsRequest" type="olp:addOnProductsRequest">
        <xs:annotation>
          <xs:documentation>Common add-on products request definition used to obtain the applicable add-on for a postage service</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="addOnProduct" type="olp:addOnProduct">
        <xs:annotation>
          <xs:documentation>Common add-on product definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="genericResponseStructure" type="olp:genericResponseStructure">
        <xs:annotation>
          <xs:documentation>Common response structure definition added to the end of every service responseIt contains the request header which holds the following:- serviceTransactionTime the transaction time before returning the response to the calling party in the yyyy-mm-dd hh:mm:ss:SSS  SSS is optional format</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="addOnProductsResult" type="olp:addOnProductsResult">
        <xs:annotation>
          <xs:documentation>Common add-on product response definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postageServiceOption" type="olp:postageServiceOption">
        <xs:annotation>
          <xs:documentation>Common postage service option definition used to indicate if additional service options are available for a given service</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="taxStructure" type="olp:taxStructure">
        <xs:annotation>
          <xs:documentation>The definition of taxes applied to a postage service</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postageServicePriceStructure" type="olp:postageServicePriceStructure">
        <xs:annotation>
          <xs:documentation>The definition of potage price structure</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="form" type="olp:form">
        <xs:annotation>
          <xs:documentation>Common form definition used to return mandatory and optional documents for a service item</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="termAndCondition" type="olp:termAndCondition">
        <xs:annotation>
          <xs:documentation>Common terms and conditions definition to return the postage service specific terms and conditions</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postageServiceStructure" type="olp:postageServiceStructure">
        <xs:annotation>
          <xs:documentation>Common postage service structure definition used when pricing or creating a postage item</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="serviceTransactionRequest" type="olp:serviceTransactionRequest">
        <xs:annotation>
          <xs:documentation>The definition of account charging structure. This is for future use only</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postageServicesResult" type="olp:postageServicesResult">
        <xs:annotation>
          <xs:documentation>The response definition for a postage service request. It contains the details of the list of postage services found in the request. This version will assume a single service details found in the request. The API can be extended in the future to handle a list of postage services.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postageServicesRequest" type="olp:postageServicesRequest">
        <xs:annotation>
          <xs:documentation>The request definition to obtain the postage service details including the price. It contains the details of the list of postage services to price. This version will assume a single postage is requested. The API can be extended in the future to handle a list of postage services.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="genericRequestStructure" type="olp:genericRequestStructure">
        <xs:annotation>
          <xs:documentation>Common request structure definition expected at the top of every service request.It contains the request header which holds the following:- carrier indicator for the service call</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="countryListResult" type="olp:countryListResult">
        <xs:annotation>
          <xs:documentation>The results of the supported country list for a given carrier definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postageServicesDetailsResult" type="olp:postageServicesDetailsResult">
        <xs:annotation>
          <xs:documentation>Common postage service details and related forms, options and meta data definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postage" type="olp:postage">
        <xs:annotation>
          <xs:documentation>Common postage definition used to return the postage item details</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="spoilPostageRequest" type="olp:spoilPostageRequest">
        <xs:annotation>
          <xs:documentation>Common spoil postage request definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postageSpoilStatus" type="olp:postageSpoilStatus">
        <xs:annotation>
          <xs:documentation>Common response postage to spoil status definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statusRequest" type="olp:statusRequest">
        <xs:annotation>
          <xs:documentation>Common API service status request definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statusResult" type="olp:statusResult">
        <xs:annotation>
          <xs:documentation>Common API service status response definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="createPostageRequest" type="olp:createPostageRequest">
        <xs:annotation>
          <xs:documentation>Common create postage items request structure definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="createPostageResult" type="olp:createPostageResult">
        <xs:annotation>
          <xs:documentation>Common create postage items response structure definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="postageToSpoil" type="olp:postageToSpoil">
        <xs:annotation>
          <xs:documentation>Common request postage to spoil structure definition</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:complexType name="exceptionDetails">
        <xs:sequence>
          <xs:element name="exceptionCode" nillable="true" type="dt:string" />
          <xs:element name="exceptionText" nillable="true" type="dt:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="contactDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="fullName" nillable="true" type="dt:longName" />
          <xs:element minOccurs="0" name="baseAddress" nillable="true" type="com:address" />
          <xs:element minOccurs="0" name="telephoneNumber" nillable="true" type="com:telephoneNumber" />
          <xs:element minOccurs="0" name="emailAddress" nillable="true" type="com:digitalAddress" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addOnProductsRequest">
        <xs:sequence>
          <xs:element name="serviceName" nillable="true" type="dt:longName" />
          <xs:element name="description" nillable="true" type="dt:longDescription" />
          <xs:element name="subscriptionLevel" nillable="true" type="dt:longName" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="discountStructure">
        <xs:sequence>
          <xs:element name="name" nillable="true" type="dt:longName" />
          <xs:element name="amount" nillable="true" type="com:amount" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="priceStructure">
        <xs:sequence>
          <xs:element name="basePrice" nillable="true" type="com:amount" />
          <xs:element name="discounts" nillable="true" type="olp:discountStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addOnProduct">
        <xs:sequence>
          <xs:element name="productId" nillable="true" type="dt:identifier" />
          <xs:element name="productName" nillable="true" type="dt:longName" />
          <xs:element name="skuName" nillable="true" type="dt:longName" />
          <xs:element name="skuId" type="dt:identifier" />
          <xs:element name="price" nillable="true" type="com:amount" />
          <xs:element name="description" nillable="true" type="dt:longDescription" />
          <xs:element name="selected" type="dt:boolean" />
          <xs:element name="priceStructure" nillable="true" type="olp:priceStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfAddOnProduct">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addOnProduct" type="olp:addOnProduct" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="error">
        <xs:sequence>
          <xs:element name="code" nillable="true" type="dt:identifier" />
          <xs:element name="cause" nillable="true" type="dt:description" />
          <xs:element name="type" nillable="true" type="dt:description" />
          <xs:element name="message" nillable="true" type="dt:description" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfError">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="error" type="olp:error" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="genericResponseStructure">
        <xs:sequence>
          <xs:element name="serviceTransactionTime" type="dt:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addOnProductsResult">
        <xs:sequence>
          <xs:element name="addOnProducts" nillable="true" type="olp:arrayOfAddOnProduct" />
          <xs:element name="genericResponseStructure" nillable="true" type="olp:genericResponseStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="parcelDimension">
        <xs:sequence>
          <xs:element minOccurs="0" name="height" nillable="true" type="com:dimension" />
          <xs:element minOccurs="0" name="width" nillable="true" type="com:dimension" />
          <xs:element minOccurs="0" name="length" nillable="true" type="com:dimension" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="parcelWeight">
        <xs:sequence>
          <xs:element minOccurs="0" name="weight" nillable="true" type="com:dimension" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageServiceOption">
        <xs:sequence>
          <xs:element name="name" nillable="true" type="dt:longName" />
          <xs:element name="inputValue" nillable="true" type="dt:decimal" />
          <xs:element name="description" nillable="true" type="dt:description" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfPostageServiceOption">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="postageServiceOption" type="olp:postageServiceOption" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfDiscountStructure">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="discountStructure" type="olp:discountStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="serviceOptionsPriceDetail">
        <xs:sequence>
          <xs:element name="name" nillable="true" type="dt:longName" />
          <xs:element name="price" nillable="true" type="com:amount" />
          <xs:element name="inputValue" nillable="true" type="dt:decimal" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfServiceOptionsPrice">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="serviceOptionsPriceDetail" type="olp:serviceOptionsPriceDetail" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="taxStructure">
        <xs:sequence>
          <xs:element name="name" nillable="true" type="dt:name" />
          <xs:element name="type" nillable="true" type="rd:taxType" />
          <xs:element name="value" nillable="true" type="com:amount" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfTaxStructure">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="taxStructure" type="olp:taxStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageServicePriceStructure">
        <xs:sequence>
          <xs:element minOccurs="0" name="totalPrice" nillable="true" type="com:amount" />
          <xs:element minOccurs="0" name="basePrice" nillable="true" type="com:amount" />
          <xs:element minOccurs="0" name="discounts" nillable="true" type="olp:arrayOfDiscountStructure" />
          <xs:element minOccurs="0" name="taxes" nillable="true" type="olp:arrayOfTaxStructure" />
          <xs:element minOccurs="0" name="options" nillable="true" type="olp:arrayOfServiceOptionsPrice" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="form">
        <xs:sequence>
          <xs:element name="type" nillable="true" type="dt:name" />
          <xs:element name="description" nillable="true" type="dt:description" />
          <xs:element name="required" type="dt:boolean" />
          <xs:element name="rangeFrom" nillable="true" type="dt:decimal" />
          <xs:element name="rangeTo" nillable="true" type="dt:decimal" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfForm">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="form" type="olp:form" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOf_string">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="text" type="dt:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="termAndCondition">
        <xs:sequence>
          <xs:element name="title" nillable="true" type="dt:name" />
          <xs:element name="text" nillable="true" type="olp:arrayOf_string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfTermAndCondition">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="termAndCondition" type="olp:termAndCondition" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageServiceStructure">
        <xs:sequence>
          <xs:element name="postageIdentifier" nillable="true" type="dt:identifier" />
          <xs:element name="postageName" type="dt:name" />
          <xs:element name="postageCarrier" type="dt:name" />
          <xs:element name="postageSize" nillable="true" type="rd:postageSizeType" />
          <xs:element name="postagePrice" nillable="true" type="olp:postageServicePriceStructure" />
          <xs:element name="forms" nillable="true" type="olp:arrayOfForm" />
          <xs:element name="termsAndConditions" nillable="true" type="olp:arrayOfTermAndCondition" />
          <xs:element name="serviceDimensionRules" nillable="true" type="olp:dimensionRules" />
          <xs:element name="serviceWeightRules" nillable="true" type="olp:weightRules" />
          <xs:element name="parcelWeight" nillable="true" type="olp:parcelWeight" />
          <xs:element name="parcelDimension" nillable="true" type="olp:parcelDimension" />
          <xs:element name="parcelPostcode" nillable="true" type="dt:identifier" />
          <xs:element name="senderContactDetails" nillable="true" type="olp:contactDetails" />
          <xs:element name="recipientContactDetails" type="olp:contactDetails" />
          <xs:element name="postageServiceOptions" nillable="true" type="olp:arrayOfPostageServiceOption" />
          <xs:element name="postageAddOnProducts" nillable="true" type="olp:arrayOfAddOnProduct" />
          <xs:element name="trackingIndicator" nillable="true" type="dt:identifier" />
          <xs:element name="watermarkIndicator" nillable="true" type="dt:identifier" />
          <xs:element name="ppiIndicator" nillable="true" type="dt:identifier" />
          <xs:element name="fimBarIndicator" nillable="true" type="dt:identifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfPostageService">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="postageServiceStructure" type="olp:postageServiceStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="serviceTransactionRequest">
        <xs:sequence>
          <xs:element name="validatePrepayBalance" nillable="true" type="dt:boolean" />
          <xs:element name="accountHolderIndicator" nillable="true" type="dt:identifier" />
          <xs:element name="subscriptionNumber" nillable="true" type="dt:identifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageServicesResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="postageServices" nillable="true" type="olp:arrayOfPostageService" />
          <xs:element name="genericResponseStructure" nillable="true" type="olp:genericResponseStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageServicesRequest">
        <xs:sequence>
          <xs:element name="postageServicesRequest" type="olp:arrayOfPostageService" />
          <xs:element name="genericRequestStructure" nillable="true" type="olp:genericRequestStructure" />
          <xs:element name="serviceRequestStructure" nillable="true" type="olp:serviceTransactionRequest" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="genericRequestStructure">
        <xs:sequence>
          <xs:element name="carrier" nillable="true" type="dt:name" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfCountry">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="countryType" type="rd:countryType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="countryListResult">
        <xs:sequence>
          <xs:element name="countryList" nillable="true" type="olp:arrayOfCountry" />
          <xs:element name="genericResponseStructure" nillable="true" type="olp:genericResponseStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dimensionRules">
        <xs:sequence>
          <xs:element minOccurs="0" name="maxLength" nillable="true" type="com:dimension" />
          <xs:element minOccurs="0" name="maxWidth" nillable="true" type="com:dimension" />
          <xs:element minOccurs="0" name="maxHeight" nillable="true" type="com:dimension" />
          <xs:element minOccurs="0" name="maxGirth" nillable="true" type="com:dimension" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="weightRules">
        <xs:sequence>
          <xs:element minOccurs="0" name="maxWeight" nillable="true" type="com:dimension" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="serviceOption">
        <xs:sequence>
          <xs:element name="option" nillable="true" type="dt:name" />
          <xs:element name="type" nillable="true" type="dt:name" />
          <xs:element name="required" nillable="true" type="dt:boolean" />
          <xs:element name="minValue" nillable="true" type="dt:decimal" />
          <xs:element name="maxValue" nillable="true" type="dt:decimal" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfServiceOption">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="serviceOption" type="olp:serviceOption" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageServices">
        <xs:sequence>
          <xs:element minOccurs="0" name="isoCountryCode" type="rd:countryType" />
          <xs:element minOccurs="0" name="notifications" nillable="true" type="dt:longDescription" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="services" nillable="true" type="olp:arrayOfPostageService" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageServicesDetailsResult">
        <xs:sequence>
          <xs:element name="postageServices" nillable="true" type="olp:postageServices" />
          <xs:element name="genericResponseStructure" nillable="true" type="olp:genericResponseStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postage">
        <xs:sequence>
          <xs:element name="indiciaIDOrTrackingNo" nillable="true" type="dt:identifier" />
          <xs:element name="postByDate" nillable="true" type="dt:date" />
          <xs:element name="indiciaStream" nillable="true" type="dt:twoDBbarcode" />
          <xs:element name="trackingIndicator" nillable="true" type="dt:identifier" />
          <xs:element name="watermarkIndicator" nillable="true" type="dt:identifier" />
          <xs:element name="ppiIndicator" nillable="true" type="dt:identifier" />
          <xs:element name="fimBarIndicator" nillable="true" type="dt:identifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfPostage">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="postage" type="olp:postage" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageToSpoil">
        <xs:sequence>
          <xs:element name="indiciaIDOrTrackingNo" type="dt:identifier" />
          <xs:element name="postageCarrier" type="dt:name" />
          <xs:element name="spoilInitiator" nillable="true" type="dt:identifier" />
          <xs:element name="spoil" nillable="true" type="dt:boolean" />
          <xs:element name="spoilReason" nillable="true" type="dt:description" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfPostageToSpoil">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="postageToSpoil" type="olp:postageToSpoil" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="spoilPostageRequest">
        <xs:sequence>
          <xs:element name="postageSpoilList" type="olp:arrayOfPostageToSpoil" />
          <xs:element name="genericRequestStructure" nillable="true" type="olp:genericRequestStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="postageSpoilStatus">
        <xs:sequence>
          <xs:element name="indiciaIDOrTrackingNo" nillable="true" type="dt:identifier" />
          <xs:element name="postageCarrier" nillable="true" type="dt:name" />
          <xs:element name="status" nillable="true" type="rd:statusType" />
          <xs:element name="error" nillable="true" type="olp:error" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arrayOfPostageSpoilStatus">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="postageSpoilStatus" type="olp:postageSpoilStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="spoilPostageResult">
        <xs:sequence>
          <xs:element name="postageSpoilListResult" nillable="true" type="olp:arrayOfPostageSpoilStatus" />
          <xs:element name="genericResponseStructure" nillable="true" type="olp:genericResponseStructure" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statusRequest">
        <xs:sequence>
          <xs:element name="applicationId" type="dt:identifier" />
          <xs:element name="service" nillable="true" type="dt:name" />
          <xs:element name="serviceMethod" nillable="true" type="dt:name" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statusResult">
        <xs:sequence>
          <xs:element name="status" nillable="true" type="rd:statusType" />
          <xs:element name="service" nillable="true" type="dt:name" />
          <xs:element name="serviceMethod" nillable="true" type="dt:name" />
          <xs:element name="statusReport" nillable="true" type="dt:longDescription" />
          <xs:element name="statusTime" nillable="true" type="dt:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPostageRequest">
        <xs:annotation>
          <xs:documentation>Overall definition for an Indicia creation request.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" ref="olp:indiciaItemParamsType">
            <xs:annotation>
              <xs:documentation>Specifications for one or more indicias to be generated, one per recipient.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPostageResult">
        <xs:annotation>
          <xs:documentation>Overall definition for an Indicia creation response.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="olp:indiciaItemType">
            <xs:annotation>
              <xs:documentation>Details of generated indicia (including tracking numbers and associated barcode images).  If greater than a configurable number of indicia are requested, then an error will be returned with this as the reason.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="int:integrationFooter" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="indiciaItemParamsType">
        <xs:complexType>
          <xs:annotation>
            <xs:documentation>Parameters required when requesting a set of Indicia be created.</xs:documentation>
          </xs:annotation>
          <xs:sequence>
            <xs:element name="carrier">
              <xs:simpleType>
                <xs:restriction base="dt:identifier">
                  <xs:enumeration value="RM">
                    <xs:annotation>
                      <xs:documentation>Mail Carrier name - Royal Mail</xs:documentation>
                    </xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="RMG">
                    <xs:annotation>
                      <xs:documentation>Mail Carrier name - Royal Mail</xs:documentation>
                    </xs:annotation>
                  </xs:enumeration>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="serviceName" type="dt:name">
              <xs:annotation>
                <xs:documentation>The name of the postage service being requested, as returned from the Royal Mail Pricing API.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="mailServiceOption" type="rd:serviceFormatType">
              <xs:annotation>
                <xs:documentation>The mail service option requested.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="compensationAmount" type="com:amount">
              <xs:annotation>
                <xs:documentation>Associated amount of compensation associated with the Service.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="price" type="com:amount">
              <xs:annotation>
                <xs:documentation>Unit price paid for the indicia.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" ref="olp:packageDimensionType">
              <xs:annotation>
                <xs:documentation>Dimensions of the package.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element ref="olp:packageWeightType">
              <xs:annotation>
                <xs:documentation>Weight of the package.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="senderContactInformation" type="olp:contactInformationType">
              <xs:annotation>
                <xs:documentation>Optional sender contact information.  N.b. if the country is 'GB' then the postcode is mandatory, else it is optional.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" maxOccurs="unbounded" name="recipientContactInformationWithId" type="olp:recipientContactInformationType">
              <xs:annotation>
                <xs:documentation>Unbounded collection of one or more uniquely identified recipient contact details. One indicia will be generated per element.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="insuredAmount" type="com:amount">
              <xs:annotation>
                <xs:documentation>Insurance amount of the package.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="indiciaItemType">
        <xs:complexType>
          <xs:annotation>
            <xs:documentation>The created Indicia in multiple formats with associated Tracking Number in multiple formats if applicable.</xs:documentation>
          </xs:annotation>
          <xs:sequence>
            <xs:element name="recipientIndiciaItemId" type="olp:recipientIndiciaItemIdType">
              <xs:annotation>
                <xs:documentation>A unique indentifier for a recipient / indicia combination - ties resulting indicia to requested recipient/indicia-args combination.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="indiciaId" type="olp:indiciaIdType">
              <xs:annotation>
                <xs:documentation>The unique indicia id which is also encapsulated as part of the data matrix.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="dataMatrix" type="dt:twoDBarcode">
              <xs:annotation>
                <xs:documentation>The base-64-encoded data-matrix string which can be rendered into a 2D barcode image.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="dataMatrixBarcodeImage" type="dt:image">
              <xs:annotation>
                <xs:documentation>The data-matrix as a 2D barcode image.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="trackingNumber" type="olp:trackingNumberType">
              <xs:annotation>
                <xs:documentation>The unique tracking number string which is also encapsulated as part of the data matrix.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="trackingNumberBarcodeImage" type="dt:image">
              <xs:annotation>
                <xs:documentation>The tracking number as a 1D barcode image.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="postByDate" type="dt:date">
              <xs:annotation>
                <xs:documentation>The date by which the indicia must be used before it expires.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="errors" type="int:errorStructure">
              <xs:annotation>
                <xs:documentation>Errors arising during the creation of the indicia item.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="warnings" type="int:warningStructure">
              <xs:annotation>
                <xs:documentation>Warnings arising during the creation of the indicia item.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="packageDimensionType">
        <xs:complexType>
          <xs:annotation>
            <xs:documentation>Dimension details.</xs:documentation>
          </xs:annotation>
          <xs:sequence>
            <xs:element name="dimensionUoM" type="rd:unitOfMeasureType">
              <xs:annotation>
                <xs:documentation>The unit of measurement for the associated dimensions.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="height" type="olp:nonNegativeDecimalType">
              <xs:annotation>
                <xs:documentation>The height of the package.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="length" type="olp:nonNegativeDecimalType">
              <xs:annotation>
                <xs:documentation>The length of the package.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="width" type="olp:nonNegativeDecimalType">
              <xs:annotation>
                <xs:documentation>The width of the package.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="girth" type="olp:nonNegativeDecimalType">
              <xs:annotation>
                <xs:documentation>The girth of the package.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="packageWeightType">
        <xs:complexType>
          <xs:annotation>
            <xs:documentation>Weight details.</xs:documentation>
          </xs:annotation>
          <xs:sequence>
            <xs:element name="weightUoM" type="rd:unitOfMeasureType" />
            <xs:element name="weight" type="xs:nonNegativeInteger" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="recipientContactInformationType">
        <xs:annotation>
          <xs:documentation>Recipient contact information and unique identifier.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="recipientIndiciaItemId" type="olp:recipientIndiciaItemIdType">
            <xs:annotation>
              <xs:documentation>A unique indentifier for a recipient / indicia combination - ties resulting indicia or error/warning to requested recipient/indicia-args combination.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="recipientContactInformation" type="olp:contactInformationType">
            <xs:annotation>
              <xs:documentation>Recipient's contact information.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="contactInformationType">
        <xs:annotation>
          <xs:documentation>Contact information.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="address" type="olp:addressType">
            <xs:annotation>
              <xs:documentation>Address.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="telephone" type="com:telephoneNumber">
            <xs:annotation>
              <xs:documentation>Telephone number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fax" type="com:telephoneNumber">
            <xs:annotation>
              <xs:documentation>Fax number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="email" type="com:digitalAddress">
            <xs:annotation>
              <xs:documentation>Email address.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addressType">
        <xs:annotation>
          <xs:documentation>Address minus the postcode (because this element has different rules depending on if the address in question is for a sender or a recipient).</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="dt:name">
            <xs:annotation>
              <xs:documentation>Name of the addressee (optional, though one of this or company must be provided).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="company" type="dt:name">
            <xs:annotation>
              <xs:documentation>Company name (optional, though one of this or company must be provided).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="buildingName" type="dt:name">
            <xs:annotation>
              <xs:documentation>Building name (optional).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="buildingNumber" type="dt:string">
            <xs:annotation>
              <xs:documentation>Building name (optional).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="address1" type="dt:description">
            <xs:annotation>
              <xs:documentation>First line of the address - subsequent to the above fields (mandatory).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="address2" type="dt:description">
            <xs:annotation>
              <xs:documentation>Second line of the address (optional).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="address3" type="dt:description">
            <xs:annotation>
              <xs:documentation>Third line of the address (optional).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stateOrProvince" type="rd:stateOrProvinceType">
            <xs:annotation>
              <xs:documentation>State or province (if country is USA or Canada).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="postTown" type="dt:name">
            <xs:annotation>
              <xs:documentation>Post town.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="county" type="rd:countyType">
            <xs:annotation>
              <xs:documentation>County.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="postCode" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>Postcode.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="poBox" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>PO Box.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="country" type="rd:countryType">
            <xs:annotation>
              <xs:documentation>Two-letter ISO country code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="zone" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>Zone.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="region" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>Region.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="trackingNumberType">
        <xs:annotation>
          <xs:documentation>An RMG standard tracking number</xs:documentation>
        </xs:annotation>
        <xs:restriction base="dt:identifier">
          <xs:maxLength value="13" />
          <xs:minLength value="13" />
          <xs:pattern value="[A-Z]{2}[0-9]{9}GB" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="indiciaIdType">
        <xs:annotation>
          <xs:documentation>An RMG standard indicia number</xs:documentation>
        </xs:annotation>
        <xs:restriction base="dt:identifier" />
      </xs:simpleType>
      <xs:simpleType name="recipientIndiciaItemIdType">
        <xs:annotation>
          <xs:documentation>A unique indentifier for a recipient / indicia combination.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="dt:identifier">
          <xs:maxLength value="50" />
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="nonNegativeDecimalType">
        <xs:annotation>
          <xs:documentation>A non-neagtive decimal number (may be 0.00)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="dt:decimal">
          <xs:minInclusive value="0.00" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="detail">
        <xs:annotation>
          <xs:documentation>Element used to hold SOAP fault details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="exceptionDetails" type="olp:exceptionDetails" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:soapext="http://www.royalmailgroup.com/soap/extensions/V1" xmlns:dt="http://www.royalmailgroup.com/cm/rmDatatypes/V1" targetNamespace="http://www.royalmailgroup.com/soap/extensions/V1" version="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://www.royalmailgroup.com/cm/rmDatatypes/V1" />
      <xs:import namespace="http://www.royalmailgroup.com/integration/core/V1" />
      <xs:complexType name="detail">
        <xs:annotation>
          <xs:documentation>Element used to hold SOAP fault details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="exceptionDetails" type="soapext:exceptionDetails" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="exceptionDetails">
        <xs:annotation>
          <xs:documentation>Used to hold the RMG defined data elements associated with the SOAP fault</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="exceptionTransactionId" type="int:transactionId" />
          <xs:element name="exceptionCode" type="int:errorCode" />
          <xs:element name="exceptionText" type="dt:description" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:dt="http://www.royalmailgroup.com/cm/rmDatatypes/V1" targetNamespace="http://www.royalmailgroup.com/cm/referenceData/V2" version="V2.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://www.royalmailgroup.com/cm/rmDatatypes/V1" />
      <xs:annotation>
        <xs:documentation>Package containing the set of code/description static data types used to categorize business facts. Reference Data represents finite value sets that are logically identified by the Type and Code. Codes are unique within a type. Codes are intelligent mnemonics i.e. US for United States etc.</xs:documentation>
      </xs:annotation>
      <xs:element name="addressUsageType" type="rd:addressUsageType" />
      <xs:complexType name="addressUsageType">
        <xs:annotation>
          <xs:documentation>This denotes the function the address plays (i.e. it is a primary address, seasonal, etc). </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="addressUsageCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>This denotes the function the address plays (i.e. it is a primary address, seasonal, etc). </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="bFPOFormatType" type="rd:bFPOFormatType" />
      <xs:complexType name="bFPOFormatType">
        <xs:annotation>
          <xs:documentation>Reference data identifying the format of British Forces Posting Overseas Mail Items</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="bFPOFormatCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Reference data identifying the Format of British Forces Posting Overseas Mail Items</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="calendarType" type="rd:calendarType" />
      <xs:complexType name="calendarType">
        <xs:annotation>
          <xs:documentation>Defines a calendar as being Fiscal, Operational, Quality or Calendar</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="calenarCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines a calendar as being Fiscal, Operational, Quality or Calendar.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="contactMethodType" type="rd:contactMethodType" />
      <xs:complexType name="contactMethodType">
        <xs:annotation>
          <xs:documentation>Contains the communication methods. Communication methods include telephone or email.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="contactMethodCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Means of communication, telephone, email, etc</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="contactUsageType" type="rd:contactUsageType" />
      <xs:complexType name="contactUsageType">
        <xs:annotation>
          <xs:documentation>Usage associated with a contact method i.e. business, social etc</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="contactUsageCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Usage associated with a contact method i.e. business, social etc</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="countryType" type="rd:countryType" />
      <xs:complexType name="countryType">
        <xs:annotation>
          <xs:documentation>A Country as recognised by the International Standards Organisation.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="countryCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>A Country as recognised by the International Standards Organisation</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="countyType" type="rd:countyType" />
      <xs:complexType name="countyType">
        <xs:annotation>
          <xs:documentation>A territorial division exercising administrative, judicial, and political functions.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="countyCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>A territorial division exercising administrative, judicial, and political functions.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="currencyType" type="rd:currencyType" />
      <xs:complexType name="currencyType">
        <xs:annotation>
          <xs:documentation>The currency code for the taxonomy is used to indicate the system of money (monetary units) in common use, especially in a nation. Under this definition, British pounds, U.S. dollars, and European euros are different types of currency, or currencies. Currencies in the sense used by foreign exchange markets, are defined by governments, and each type has limited boundaries of acceptance.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="currencyCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Currency code is used to indicate the system of money (monetary units) in common use within a nation. Under this definition, British pounds, U.S. dollars, and European euros are different types of currency, or currencies. Currencies in the sense used by foreign exchange markets, are defined by governments, and each type has limited boundaries of acceptance.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="geospatialPositionType" type="rd:geospatialPositionType" />
      <xs:complexType name="geospatialPositionType">
        <xs:annotation>
          <xs:documentation>Gives context to a Geo Spatial Position i.e. front door, back door, Post Box.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="geospatialPositionCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Gives context to a Geo Spatial Position i.e. front door, back door, Post Box.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="mailClassType" type="rd:mailClassType" />
      <xs:complexType name="mailClassType">
        <xs:annotation>
          <xs:documentation>Reference data identifying the class of mail service.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="mailClassCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Reference data identifying the class of mail service.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="mailItemFormatType" type="rd:mailItemFormatType" />
      <xs:complexType name="mailItemFormatType">
        <xs:annotation>
          <xs:documentation>The format (RM Letters or International) of the Mail Item.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="mailItemFormatCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>The format (RM Letters or International) of the Mail Item.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="nameSuffixType" type="rd:nameSuffixType" />
      <xs:complexType name="nameSuffixType">
        <xs:annotation>
          <xs:documentation>Defines the suffix of a name i.e. Jnr, Esq etc.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="nameSuffixCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the suffix of a name i.e. Jnr, Esq etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="nameType" type="rd:nameType" />
      <xs:complexType name="nameType">
        <xs:annotation>
          <xs:documentation>Defines the type of name in terms of being Primary, Alias or Nickname</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="nameCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the type of name in terms of being Primary, Alias or Nickname</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="nonWorkingDayType" type="rd:nonWorkingDayType" />
      <xs:complexType name="nonWorkingDayType">
        <xs:annotation>
          <xs:documentation>Non Working Day object contains all the planned non-working days. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="nonWorkingDayCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Non Working Day object contains all the planned non-working days i.e. Bank Holiday, Local Holiday.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="postageSizeType" type="rd:postageSizeType" />
      <xs:complexType name="postageSizeType">
        <xs:annotation>
          <xs:documentation>Defines the different sizes of letters or parcels</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="postageSizeCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the different sizes of letters and parcels</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="referenceDataType" type="rd:referenceDataType" />
      <xs:complexType name="referenceDataType">
        <xs:annotation>
          <xs:documentation>The reference data class gives a common structure which will be adopted for all generic reference data. Reference data tends to be 'Qualifier' data (referenced in the data standards document on Sharepoint). For example the expression Product Short Name; 'Short' in this instance is the qualifier and could have a corresponding set of reference values that could be used. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="identifier" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>~Unique identifier for a Reference Data instance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="code" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>The code is used as an identifier to recognize or establish a particular person or thing. It is used to verify the identity of the bearer of an identity. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="name" type="dt:longName">
            <xs:annotation>
              <xs:documentation>Name assorted with the code i.e. Name - United States for Code - US.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="description" type="dt:description">
            <xs:annotation>
              <xs:documentation>A description or the reference data item. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="statusType" type="rd:statusType" />
      <xs:complexType name="statusType">
        <xs:annotation>
          <xs:documentation>This is the state of an entity (i.e. it is active, approved, draft, inactive, etc). The sequence of states an entity passes through define the entity life history.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="statusCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>This is the state of an entity (i.e. it is active, approved, draft, inactive, etc).  The sequence of states an entity passes through define the entity life history.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="systemNameType" type="rd:systemNameType" />
      <xs:complexType name="systemNameType">
        <xs:annotation>
          <xs:documentation>The official RMG system name is the commonly used name for a system and will be more business oriented than a numerical identifier. An example would the Traffic and Revenue Reporting System.  </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="systemNameCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>The official RMG system name is the commonly used name for a system and will be more business oriented than a numerical identifier. An example would the Traffic and Revenue Reporting System. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="taxType" type="rd:taxType" />
      <xs:complexType name="taxType">
        <xs:annotation>
          <xs:documentation>Defines the different types of tax i.e. VAT, Income, Corporate etc.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="taxCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the different types of tax i.e. VAT, Income, Corporate etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="titleType" type="rd:titleType" />
      <xs:complexType name="titleType">
        <xs:annotation>
          <xs:documentation>Defines the prefix of a name</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="titleCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the prefix of a name</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="unitOfMeasureType" type="rd:unitOfMeasureType" />
      <xs:complexType name="unitOfMeasureType">
        <xs:annotation>
          <xs:documentation>A unitOfMeasure represents is a definite magnitude of a physical quantity, defined and adopted by convention or by law, that is used as a standard for measurement of the same physical quantity. Any other value of the physical quantity can be expressed as a simple multiple of the unit of measure. For example, length is a physical quantity. The metre is a unit of length that represents a definite predetermined length. When we say 10 metres, we actually mean 10 times the definite predetermined length called “metre”.  </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="unitOfMeasureCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>A unitOfMeasure represents is a definite magnitude of a physical quantity, defined and adopted by convention or by law, that is used as a standard for measurement of the same physical quantity. Any other value of the physical quantity can be expressed as a simple multiple of the unit of measure. For example, length is a physical quantity. The metre is a unit of length that represents a definite predetermined length. When we say 10 metres, we actually mean 10 times the definite predetermined length called “metre”.  </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="workingDayType" type="rd:workingDayType" />
      <xs:complexType name="workingDayType">
        <xs:annotation>
          <xs:documentation>Working Day Type contains the set of Types of working days. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="workingDayCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Working Day Type contains the set of Types of working days. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="functionalLocationGroupType" type="rd:functionalLocationGroupType" />
      <xs:complexType name="functionalLocationGroupType">
        <xs:annotation>
          <xs:documentation>Specifies if the type  of Functional Location group</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="functionalLocationGroupCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Specifies the Functional Location Group type</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="dateFormatType" type="rd:dateFormatType" />
      <xs:complexType name="dateFormatType">
        <xs:annotation>
          <xs:documentation>Defines a preferred format for a datetime value.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="dateFormatCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines a preferred format for a datetime value.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="dayOfWeekType" type="rd:dayOfWeekType" />
      <xs:complexType name="dayOfWeekType">
        <xs:annotation>
          <xs:documentation>Day of week i.e. Monday, Tuesday etc</xs:documentation>
        </xs:annotation>
        <xs:choice>
          <xs:element minOccurs="1" maxOccurs="1" name="dayOfWeekCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Day of week.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:choice>
      </xs:complexType>
      <xs:element name="durationType" type="rd:durationType" />
      <xs:complexType name="durationType">
        <xs:annotation>
          <xs:documentation>Defines a type of time period i.e. weekly, monthly, quarterly, annually etc</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="durationCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines a type of time period i.e. weekly, monthly, quarterly, annually etc</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="functionalLocationRelationshipType" type="rd:functionalLocationRelationshipType" />
      <xs:complexType name="functionalLocationRelationshipType">
        <xs:annotation>
          <xs:documentation>Defines the Functional Location Group Relationship in terms of PCA, Parent, Operational, Management etc</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="functionalLocationRelationCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the Functional Location Group Relationship in terms of PCA, Parent, Operational, Management etc</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="functionalLocationSubType" type="rd:functionalLocationSubType" />
      <xs:complexType name="functionalLocationSubType">
        <xs:annotation>
          <xs:documentation>Defines the Functional Location at the lowest level in terms of airport, seaport, rail hub etc</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="functionalLocationSubtypeCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the Functional Location at the lowest level in terms of airport, seaport, rail hub etc</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="functionalLocationType" type="rd:functionalLocationType" />
      <xs:complexType name="functionalLocationType">
        <xs:annotation>
          <xs:documentation>Defines the type of Functional Location such as Region, Network Hub, Delivery Hub etc.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="functionalLocationCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the type of Functional Location such as Region, Network Hub, Delivery Hub etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="roleType" type="rd:roleType" />
      <xs:complexType name="roleType">
        <xs:annotation>
          <xs:documentation>Defines the different roles which a party may fulfil.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="roleCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the different roles a party may fulfil.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="serviceEnhancementType" type="rd:serviceEnhancementType" />
      <xs:complexType name="serviceEnhancementType">
        <xs:annotation>
          <xs:documentation>Defines the type of enhancement used to add to an offering/product (with specific parameters) which may be sold to a customer.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="serviceEnhancementCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the type of enhancement used to add to an offering/product (with specific parameters) which may be sold to a customer.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="serviceFormatType" type="rd:serviceFormatType" />
      <xs:complexType name="serviceFormatType">
        <xs:annotation>
          <xs:documentation>Defines the format of the Service being offered. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="serviceFormatCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the format of the Service being offered.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="serviceOfferingType" type="rd:serviceOfferingType" />
      <xs:complexType name="serviceOfferingType">
        <xs:annotation>
          <xs:documentation>Defines the type of offering/product (with specific parameters) which may be sold to a customer.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="serviceOfferingCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>Defines the type of offering/product (with specific parameters) which may be sold to a customer. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="stateOrProvinceType" type="rd:stateOrProvinceType" />
      <xs:complexType name="stateOrProvinceType">
        <xs:annotation>
          <xs:documentation>This is used specifically for international items only and is applicable for the US, Canada, Australia, etc. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="stateOrProvinceCode" type="rd:referenceDataType">
            <xs:annotation>
              <xs:documentation>This is used specifically for international items only and is applicable for the US, Canada, Australia, etc. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:com="http://www.royalmailgroup.com/cm/common/V3" xmlns:dt="http://www.royalmailgroup.com/cm/rmDatatypes/V1" targetNamespace="http://www.royalmailgroup.com/cm/common/V3" version="V3.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://www.royalmailgroup.com/cm/rmDatatypes/V1" />
      <xs:import namespace="http://www.royalmailgroup.com/cm/referenceData/V2" />
      <xs:annotation>
        <xs:documentation>This package contains those complex classes which are viewed as being ubiquitous across the organization i.e. address, amount, status.</xs:documentation>
      </xs:annotation>
      <xs:element name="address" type="com:address" />
      <xs:complexType name="address">
        <xs:annotation>
          <xs:documentation>A postal address is a method of identifying a deliverable Location to the postal service.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addressUsageType" type="rd:addressUsageType">
            <xs:annotation>
              <xs:documentation>This denotes the function the address plays (i.e. it is a primary address, seasonal, etc). </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="domesticIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This flag indicates whether the address is a UK domestic address or an international address. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="buildingName" type="dt:name">
            <xs:annotation>
              <xs:documentation>This is the vanity name for a building or house (i.e. Rowland Hill House). </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="buildingNumber" type="dt:integer">
            <xs:annotation>
              <xs:documentation>This is the allocated number identifying the location within the postcode. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="addressLine1" type="dt:description">
            <xs:annotation>
              <xs:documentation>Generic line to hold address body (i.e. street name and number, direction, borough, etc). </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="addressLine2" type="dt:description">
            <xs:annotation>
              <xs:documentation>Generic line to hold address body (i.e. street name and number, direction, borough, etc). </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="addressLine3" type="dt:description">
            <xs:annotation>
              <xs:documentation>Generic line to hold address body (i.e. street name and number, direction, borough, etc). </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="addressLine4" type="dt:description">
            <xs:annotation>
              <xs:documentation>Generic line to hold address body (i.e. street name and number, direction, borough, etc). </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="stateOrProvince" type="rd:stateOrProvinceType">
            <xs:annotation>
              <xs:documentation>This is used specifically for international items only and is applicable for the US, Canada, Australia, etc. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="postTown" type="dt:name">
            <xs:annotation>
              <xs:documentation>A town is a human settlement larger than a village but smaller than a city.  </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="county" type="rd:countyType">
            <xs:annotation>
              <xs:documentation>A territorial division exercising administrative, judicial, and political functions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="postcode" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>A code created to abbreviate a series of postal addresses, that share location affinity, in order to facilitate mail collection, processing and delivery.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="country" type="rd:countryType">
            <xs:annotation>
              <xs:documentation>A Country as recognised by the International Standards Organisation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="status" type="com:status">
            <xs:annotation>
              <xs:documentation>This is the state of the entity (i.e. it is active, approved, draft, inactive, etc).  </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="audit" type="com:audit">
            <xs:annotation>
              <xs:documentation>The audit type is appended to all business data constructs to ensure a standard way of capturing key data to track back users who have made changes to the data. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="amount" type="com:amount" />
      <xs:complexType name="amount">
        <xs:annotation>
          <xs:documentation>An amount is the total or two or more quantities; the aggregate. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="creditIndicator" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This indicates whether the amount is a credit or a debit. If the boolean value is a 1 then the amount is greater than or equal to zero. If the boolean value is a 0, then the amount is less than zero. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="currency" type="rd:currencyType">
            <xs:annotation>
              <xs:documentation>The currency code for the taxonomy is used to indicate the system of money (monetary units) in common use, especially in a nation. Under this definition, British pounds, U.S. dollars, and European euros are different types of currency, or currencies. Currencies in the sense used by foreign exchange markets, are defined by governments, and each type has limited boundaries of acceptance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="value" type="dt:decimal">
            <xs:annotation>
              <xs:documentation>The number that designates the quantity of the amount. i.e. 5.50 Because there is a credit indicator, this field MUST always be an absolute value and the credit or debit is interpreted through the indicator field. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="audit" type="com:audit" />
      <xs:complexType name="audit">
        <xs:annotation>
          <xs:documentation>The audit class is appended to all business and reference data constructs to ensure a standard way of capturing key data to track back users who have made changes to the data.   </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="lastUpdateDate" type="dt:dateTime">
            <xs:annotation>
              <xs:documentation>The date the data was late updated. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="lastUpdateUserIdentifier" type="dt:identifier">
            <xs:annotation>
              <xs:documentation>The last update user ID represents the user identifier for the last person who updated the record. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="contactMechanism" type="com:contactMechanism" />
      <xs:complexType name="contactMechanism">
        <xs:annotation>
          <xs:documentation>The Contact Mechanism object contains the methods and usage for contacting a Party.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="contactMethod" type="rd:contactMethodType">
            <xs:annotation>
              <xs:documentation>Contact method unique identifier in the MDM system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="contacUusage" type="rd:contactUsageType">
            <xs:annotation>
              <xs:documentation>Contact usage unique identifier in the MDM system:•	1000000 – UNKNOWN•	1000001 – NOT APPLICABLE•	1000002 – BUSINESS</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="digitalAddress" type="com:digitalAddress" />
      <xs:complexType name="digitalAddress">
        <xs:annotation>
          <xs:documentation>Electronic address such as email or twitter. </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="com:contactMechanism">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="electronicAddress" type="dt:description" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="dimension" type="com:dimension" />
      <xs:complexType name="dimension">
        <xs:annotation>
          <xs:documentation>A dimension is a measure of spatial extent. It is a physical property, such as mass, length, time, or a combination thereof, regarded as a fundamental measure or as one of a set of fundamental measures of a physical quantity. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="unitOfMeasure" type="rd:unitOfMeasureType">
            <xs:annotation>
              <xs:documentation>A unit of measure is the reference value to select the type of dimension being referenced. Sample values could be weight, length, height, depth, etc. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="value" type="xs:float">
            <xs:annotation>
              <xs:documentation>The number that designates the quantity of the dimension. i.e. 5 centimeters.  </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="formatDatetime" type="com:formatDatetime" />
      <xs:complexType name="formatDatetime">
        <xs:annotation>
          <xs:documentation>Defines a primitive Date time with a specified format.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="dateFormatType" type="rd:dateFormatType">
            <xs:annotation>
              <xs:documentation>Defines a preferred format for a date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="dateTime" type="dt:dateTime">
            <xs:annotation>
              <xs:documentation>A temporal value which contains both date and time elements</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="geoSpatialPosition" type="com:geoSpatialPosition" />
      <xs:complexType name="geoSpatialPosition">
        <xs:annotation>
          <xs:documentation>defines the exact position according to a geo spatial system  </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="geoDeticSystem" type="rd:systemNameType">
            <xs:annotation>
              <xs:documentation>Standard global positioning system being used i.e. WGS84</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="geoSpatialPositionType" type="rd:geospatialPositionType">
            <xs:annotation>
              <xs:documentation>Defines the context for a geo spatial location i.e. back door, front door, post box etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="altitude" type="dt:decimal">
            <xs:annotation>
              <xs:documentation>Defines the height component of a position</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="longitude" type="dt:geoSpatial">
            <xs:annotation>
              <xs:documentation>The longitude component of a geospatial position</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="latitude" type="dt:geoSpatial">
            <xs:annotation>
              <xs:documentation>The latitude component of a geospatial position</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="status" type="com:status" />
      <xs:complexType name="status">
        <xs:annotation>
          <xs:documentation>This is the state of the entity (i.e. it is active, approved, draft, inactive, etc).  </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="status" type="rd:statusType">
            <xs:annotation>
              <xs:documentation>This is the state of the reference data (i.e. it is active, approved, draft, inactive, etc).  </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="validFrom" type="dt:dateTime">
            <xs:annotation>
              <xs:documentation>The date at which the reference data is retired. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="validTo" type="dt:dateTime">
            <xs:annotation>
              <xs:documentation>The date at which the reference data becomes active. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="systemCrossReference" type="com:systemCrossReference" />
      <xs:complexType name="systemCrossReference">
        <xs:annotation>
          <xs:documentation>This class is used to manage cross reference keys between systems. For example an entity will be known by one identifier in the source system and have another in the target system so these keys are used so that the target system can identify the appropriate entity within its own system. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="sourceSystemCode" type="rd:systemNameType">
            <xs:annotation>
              <xs:documentation>The source identifier can be an acronym or number used to identify it. The system catalogue is a frequently used number to identify systems within RMG. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="sourceCrossRefernceAttribute" type="dt:name">
            <xs:annotation>
              <xs:documentation>The name of the attribute of a source system cross referenced to the target system.    </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="sourceCrossRefernceValue" type="dt:string">
            <xs:annotation>
              <xs:documentation>The value of a source system attribute cross referenced to the target system value.    </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="targetSystemCode" type="rd:systemNameType">
            <xs:annotation>
              <xs:documentation>The target source system name is the commonly used name for a system and will be more business oriented than a numerical identifier. An example would the Traffic and Revenue Reporting System.  </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="targetCrossRefernceAttribute" type="dt:name">
            <xs:annotation>
              <xs:documentation>The name of a target system attribute cross referenced to the source system.  </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="targetCrossRefernceValue" type="dt:string">
            <xs:annotation>
              <xs:documentation>The value of a target system attribute cross referenced to the source system value.  </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="status" type="com:status">
            <xs:annotation>
              <xs:documentation>This is the state of the entity (i.e. it is active, approved, draft, inactive, etc).  </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="audit" type="com:audit">
            <xs:annotation>
              <xs:documentation>The audit type is appended to all business data constructs to ensure a standard way of capturing key data to track back users who have made changes to the data. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="telephoneNumber" type="com:telephoneNumber" />
      <xs:complexType name="telephoneNumber">
        <xs:annotation>
          <xs:documentation>Standard Format for a telephone number</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="com:contactMechanism">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="countryCode" type="dt:integer">
                <xs:annotation>
                  <xs:documentation>Standard Country Dialing code i.e. 0044</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="areaCode" type="dt:integer">
                <xs:annotation>
                  <xs:documentation>Standard telephone number area code</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="telephoneNumber" type="dt:integer">
                <xs:annotation>
                  <xs:documentation>Body of the telephone number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="extensionNumber" type="dt:integer">
                <xs:annotation>
                  <xs:documentation>Extension number within a location.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="speedDialNumber" type="dt:integer">
                <xs:annotation>
                  <xs:documentation>Extension number within a location.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="FaultResponse">
    <wsdl:part name="FaultResponse" element="olp:exceptionDetails" />
  </wsdl:message>
  <wsdl:message name="securityHeader">
    <wsdl:part name="Security" element="wsse:Security" />
  </wsdl:message>
  <wsdl:message name="getCountriesRequest">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="genericRequestStructure" type="olp:genericRequestStructure" />
  </wsdl:message>
  <wsdl:message name="getCountriesResponse">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="getCountriesReturn" type="olp:countryListResult" />
    <wsdl:part name="integrationFooter" type="int:integrationFooter" />
  </wsdl:message>
  <wsdl:message name="getServicesByCountryRequest">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="genericRequestStructure" type="olp:genericRequestStructure" />
    <wsdl:part name="isoCountryCode" type="rd:countryType" />
  </wsdl:message>
  <wsdl:message name="getServicesByCountryResponse">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="getServicesByCountryReturn" type="olp:postageServicesDetailsResult" />
    <wsdl:part name="integrationFooter" type="int:integrationFooter" />
  </wsdl:message>
  <wsdl:message name="getPostageServiceDetailsRequest">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="postageServiceDetails" type="olp:postageServicesRequest" />
  </wsdl:message>
  <wsdl:message name="getPostageServiceDetailsResponse">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="getPostageServiceDetailsReturn" type="olp:postageServicesResult" />
    <wsdl:part name="integrationFooter" type="int:integrationFooter" />
  </wsdl:message>
  <wsdl:message name="spoilPostageRequest">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="spoilPostageDetails" type="olp:spoilPostageRequest" />
  </wsdl:message>
  <wsdl:message name="spoilPostageResponse">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="spoilPostageReturn" type="olp:spoilPostageResult" />
    <wsdl:part name="integrationFooter" type="int:integrationFooter" />
  </wsdl:message>
  <wsdl:message name="getStatusRequest">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="statusDetails" type="olp:statusRequest" />
  </wsdl:message>
  <wsdl:message name="getStatusResponse">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="statusReturn" type="olp:statusResult" />
    <wsdl:part name="integrationFooter" type="int:integrationFooter" />
  </wsdl:message>
  <wsdl:message name="createPostageRequest">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="createPostageDetails" type="olp:createPostageRequest" />
  </wsdl:message>
  <wsdl:message name="createPostageResponse">
    <wsdl:part name="integrationHeader" type="int:integrationHeader" />
    <wsdl:part name="createPostageResponse" type="olp:createPostageResult" />
    <wsdl:part name="integrationFooter" type="int:integrationFooter" />
  </wsdl:message>
  <wsdl:portType name="OnlinePostageService">
    <wsdl:operation name="getCountries">
      <wsdl:input name="getCountriesRequest" message="olpwsdl:getCountriesRequest" />
      <wsdl:output name="getCountriesResponse" message="olpwsdl:getCountriesResponse" />
      <wsdl:fault name="Fault" message="olpwsdl:FaultResponse" />
    </wsdl:operation>
    <wsdl:operation name="getServicesByCountry">
      <wsdl:input name="getServicesByCountryRequest" message="olpwsdl:getServicesByCountryRequest" />
      <wsdl:output name="getServicesByCountryResponse" message="olpwsdl:getServicesByCountryResponse" />
      <wsdl:fault name="Fault" message="olpwsdl:FaultResponse" />
    </wsdl:operation>
    <wsdl:operation name="getPostageServiceDetails">
      <wsdl:input name="getPostageServiceDetailsRequest" message="olpwsdl:getPostageServiceDetailsRequest" />
      <wsdl:output name="getPostageServiceDetailsResponse" message="olpwsdl:getPostageServiceDetailsResponse" />
      <wsdl:fault name="Fault" message="olpwsdl:FaultResponse" />
    </wsdl:operation>
    <wsdl:operation name="spoilPostage">
      <wsdl:input name="spoilPostageRequest" message="olpwsdl:spoilPostageRequest" />
      <wsdl:output name="spoilPostageResponse" message="olpwsdl:spoilPostageResponse" />
      <wsdl:fault name="Fault" message="olpwsdl:FaultResponse" />
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:input name="getStatusRequest" message="olpwsdl:getStatusRequest" />
      <wsdl:output name="getStatusResponse" message="olpwsdl:getStatusResponse" />
      <wsdl:fault name="Fault" message="olpwsdl:FaultResponse" />
    </wsdl:operation>
    <wsdl:operation name="createPostage">
      <wsdl:input name="createPostageRequest" message="olpwsdl:createPostageRequest" />
      <wsdl:output name="createPostageResponse" message="olpwsdl:createPostageResponse" />
      <wsdl:fault name="Fault" message="olpwsdl:FaultResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OnlinePostage" type="olpwsdl:OnlinePostageService">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc" />
    <wsdl:operation name="getCountries">
      <wsdlsoap:operation soapAction="http://www.royalmailgroup.com/getCountries" />
      <wsdl:input name="getCountriesRequest">
        <wsdlsoap:header message="olpwsdl:securityHeader" part="Security" use="literal" />
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output name="getCountriesResponse">
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
      <wsdl:fault name="Fault">
        <wsdlsoap:fault use="literal" name="Fault" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServicesByCountry">
      <wsdlsoap:operation soapAction="http://www.royalmailgroup.com/getServicesByCountry" />
      <wsdl:input name="getServicesByCountryRequest">
        <wsdlsoap:header message="olpwsdl:securityHeader" part="Security" use="literal" />
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output name="getServicesByCountryResponse">
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
      <wsdl:fault name="Fault">
        <wsdlsoap:fault use="literal" name="Fault" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPostageServiceDetails">
      <wsdlsoap:operation soapAction="http://www.royalmailgroup.com/getPostageServiceDetails" />
      <wsdl:input name="getPostageServiceDetailsRequest">
        <wsdlsoap:header message="olpwsdl:securityHeader" part="Security" use="literal" />
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output name="getPostageServiceDetailsResponse">
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
      <wsdl:fault name="Fault">
        <wsdlsoap:fault use="literal" name="Fault" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="spoilPostage">
      <wsdlsoap:operation soapAction="http://www.royalmailgroup.com/spoilPostage" />
      <wsdl:input name="spoilPostageRequest">
        <wsdlsoap:header message="olpwsdl:securityHeader" part="Security" use="literal" />
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output name="spoilPostageResponse">
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
      <wsdl:fault name="Fault">
        <wsdlsoap:fault use="literal" name="Fault" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdlsoap:operation soapAction="http://www.royalmailgroup.com/getStatus" />
      <wsdl:input name="getStatusRequest">
        <wsdlsoap:header message="olpwsdl:securityHeader" part="Security" use="literal" />
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/api/onlinePostage/V1" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
      <wsdl:fault name="Fault">
        <wsdlsoap:fault use="literal" name="Fault" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPostage">
      <wsdlsoap:operation soapAction="http://www.royalmailgroup.com/createPostage" />
      <wsdl:input name="createPostageRequest">
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/WSDLapi/onlinePostage/V1" />
      </wsdl:input>
      <wsdl:output name="createPostageResponse">
        <wsdlsoap:body use="literal" namespace="http://www.royalmailgroup.com/WSDLapi/onlinePostage/V1" />
      </wsdl:output>
      <wsdl:fault name="Fault">
        <wsdlsoap:fault use="literal" name="Fault" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OnlinePostageService">
    <wsdl:port name="OnlinePostageService" binding="olpwsdl:OnlinePostage">
      <wsdlsoap:address location="https://api.royalmail.net/onlinepostage/v2" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>