swagger: '2.0'
info:
  x-ibm-name: rmg-tracking-api-v2-rest-b2b-browser
  title: RMG Tracking API V2 (REST) B2B Browser
  version: 1.0.11
  description: "The Royal Mail Tracking API V2 B2B Browser exposes a web service that allows account customers to receive track-and-trace information for their mail items. \n\nThe API is backend for ebusiness and Post Office track and trace webapps of the Royal Mail website (http://www.royalmail.com/track-trace) For  B2B logged in users , this API providing summary for latest mailPieceIds , options to get details of a mailPiecesId and proof of image."
  contact: {}
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Client-Id:
    type: apiKey
    description: ''
    in: header
    name: X-IBM-Client-Id
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
      - set-variable:
          title: set-variable
          actions:
            - value: '{ "alg": "HS256",   "kty": "oct",   "use": "sig",   "k": "ycsjclSb2dcdnJ-VobQLWeXBYUsFsPS8MddhqQ9N0d1CWWMms0FQH70SJQX2RcrTamhzyNniXtbLf47qDLJ6JI75oU-uUTHstpyzON1FQtpHIGajMaScIn4ZdT9pzgVwR7Ll1y_9wGBLeLW5Pqy0MhQDUO62BTB8hJ6CE8S9y4WwwrPD5Zj-jNDlSeZyAFnaa573SyITxwgDuMHgmIuKkt02ByWhS2mrTKCSOfdPIP_QdUPqbyixOji8A5fsoO65gAxzxvVfZNN4JgwHGRfllj5lH1nljL0MYlWGJ7i5iqvxp0-EAKgiHf8QsRWNXbpp03mGCXsz2XpnO6P9Kx7abw",   "kid": "hs256-key" }'
              add: hs256-key
          version: 1.0.0
      - gatewayscript:
          title: gatewayscript
          version: 1.0.0
          source: "var inHeaders = apim.getvariable('request.headers');\r\nvar isError = false;\r\nvar origin = inHeaders.origin;\r\nif(origin.includes('royalmail.com')){\r\n}\r\nelse if(origin.includes('postoffice.co.uk')){\r\n}\r\nelse if(origin.includes('ibmcloud.com')){\r\n}\r\nelse if(origin.includes('royalmail.net')){\r\n}\r\nelse\r\n{\r\n    var errResp = {\"httpCode\":\"401\",\r\n    \"httpMessage\":\"Unauthorized\",\r\n    \"moreInformation\":\"Not authorized to invoke\"};\r\n    apim.setvariable('errResp',errResp);\r\n    isError = true;\r\n    apim.setvariable('isError',isError);\r\n}\r\n"
      - operation-switch:
          title: operation-switch
          case:
            - operations:
                - verb: get
                  path: '/user/{userId}/history/{siteId}'
              execute:
                - switch:
                    title: switch
                    case:
                      - condition: "apim.getvariable('isError')==true"
                        execute:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: |-
                                var errResp = apim.getvariable('errResp');
                                apim.setvariable('message.status.code','401');
                                apim.setvariable('message.body', errResp);
                                apim.output('application/json');
                      - otherwise:
                          - jwt-validate:
                              title: jwt-validate
                              jwt: request.headers.x-rmg-auth-token
                              output-claims: decoded.claims
                              version: 1.0.0
                              iss-claim: eBusiness
                              aud-claim: TAPIv2
                              jws-jwk: hs256-key
                          - invoke:
                              title: invoke
                              timeout: 60
                              verb: GET
                              cache-response: time-to-live
                              version: 1.0.0
                              target-url: 'https://0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix:f8c5d0aedee17e9844aaa167dd824d75a0ba6ee77fa37d7eacd886677a07b3d7@0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix.cloudant.com/mail_piece_id/_design/mailPieceId/_search/getMailPieceIds?q=userId:$(request.parameters.userId) AND siteId:$(request.parameters.siteId)&sort="-lastUpdateDateTime"&limit=$(request.parameters.limit)&include_docs=true'
                              output: cloudantGetResponse
                              cache-ttl: 60
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: "var mailPieceIds = [];\nvar inBody = apim.getvariable('cloudantGetResponse.body');\nvar inRows = inBody.rows;\nvar i=0;\nfor(i=0; i<inRows.length; i++){\n    mailPieceIds.push(inRows[i].doc.mailPieceId);\n}\nvar rtiOrderedList={\n\trtiOrderedList:[]\n}; \nrtiOrderedList.rtiOrderedList=mailPieceIds;\napim.setvariable('rtiOrderedList',JSON.stringify(rtiOrderedList));\napim.setvariable('apiconnect','apiconnect');\nvar claims = apim.getvariable('decoded.claims');\nvar jsonClaims = JSON.parse(claims);\napim.setvariable('aud',jsonClaims.aud);\nvar exp = parseInt(jsonClaims.exp);\nvar curr = (Date.now()/1000);\nvar currS = curr.toString();\nvar currStr = currS.substr(0, currS.indexOf('.')); \nvar outexp = exp - parseInt(currStr);\napim.setvariable('exp',outexp);"
                          - jwt-generate:
                              title: jwt-generate
                              iss-claim: apiconnect
                              exp-claim: $(exp)
                              version: 1.0.0
                              description: ''
                              jwt: generatedJWT
                              aud-claim: aud
                              sub-claim: request.parameters.userId
                              jws-jwk: hs256-key
                              jws-alg: HS256
                              private-claims: rtiOrderedList
                          - map:
                              title: map
                              inputs:
                                input:
                                  schema:
                                    description: ''
                                    type: object
                                    properties:
                                      total_rows:
                                        type: number
                                      bookmark:
                                        type: string
                                      rows:
                                        type: array
                                        items:
                                          properties:
                                            id:
                                              type: string
                                            order:
                                              type: array
                                              items:
                                                type: number
                                            fields:
                                              type: object
                                              properties: {}
                                            doc:
                                              type: object
                                              properties:
                                                _id:
                                                  type: string
                                                _rev:
                                                  type: string
                                                userId:
                                                  type: string
                                                siteId:
                                                  type: string
                                                mailPieceId:
                                                  type: string
                                                lastUpdateDateTime:
                                                  type: string
                                          type: object
                                    example: "{\r\n   \"total_rows\": 2,\r\n   \"bookmark\": \"g2wAAAABaANkACNkYmNvcmVAZGI2LmJtLWNjLXVrLTAxLmNsb3VkYW50Lm5ldGwAAAACbgQAAAAA8G4EAP____9qbAAAAAJGQrJYUGQKTQBhAmpq\",\r\n   \"rows\":    [\r\n            {\r\n         \"id\": \"c5761db30c0443aa858e1d2dffb29cc5\",\r\n         \"order\":          [\r\n            2.0170515155635E13,\r\n            4\r\n         ],\r\n         \"fields\": {},\r\n         \"doc\":          {\r\n            \"_id\": \"c5761db30c0443aa858e1d2dffb29cc5\",\r\n            \"_rev\": \"2-463656de83044052096b80f0b1b7aa72\",\r\n            \"userId\": \"mohiddin\",\r\n            \"siteId\": \"royalmail\",\r\n            \"mailPieceId\": \"AB12345678AD\",\r\n            \"lastUpdateDateTime\": \"20170515155635\"\r\n         }\r\n      },\r\n            {\r\n         \"id\": \"5f7e70bf45a98119b6dcd89bc6de5f82\",\r\n         \"order\":          [\r\n            2.0170515155533E13,\r\n            2\r\n         ],\r\n         \"fields\": {},\r\n         \"doc\":          {\r\n            \"_id\": \"5f7e70bf45a98119b6dcd89bc6de5f82\",\r\n            \"_rev\": \"1-deb9fa1b3a5355e3e4a55044baf05802\",\r\n            \"userId\": \"mohiddin\",\r\n            \"siteId\": \"royalmail\",\r\n            \"mailPieceId\": \"AB12345678AC\",\r\n            \"lastUpdateDateTime\": \"20170515155533\"\r\n         }\r\n      }\r\n   ]\r\n}"
                                  variable: cloudantGetResponse.body
                                  content: application/json
                              outputs:
                                output:
                                  schema:
                                    $ref: '#/definitions/rtiResponse'
                                  variable: message.body
                                  content: application/json
                              actions:
                                - create: output.mpDetails
                                  foreach: input.rows
                                  from: input.rows
                                  actions:
                                    - set: lastAccessedTimestamp
                                      from: doc.lastUpdateDateTime
                                    - set: mailPieceId
                                      from: doc.mailPieceId
                                - set: output.rtiOrderedList
                                  default: $(generatedJWT)
                              version: 1.0.0
                    version: 1.0.0
            - operations:
                - verb: delete
                  path: '/user/{userId}/history/{siteId}'
              execute:
                - switch:
                    title: switch
                    case:
                      - condition: "apim.getvariable('isError')==true"
                        execute:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: |
                                var errResp = apim.getvariable('errResp');
                                apim.setvariable('message.status.code','401');
                                apim.setvariable('message.body', errResp);
                      - otherwise:
                          - jwt-validate:
                              title: jwt-validate
                              jwt: request.headers.x-rmg-auth-token
                              output-claims: decoded.claims
                              version: 1.0.0
                              iss-claim: eBusiness
                              aud-claim: TAPIv2
                              jws-jwk: hs256-key
                          - invoke:
                              title: invokeGet
                              timeout: 60
                              verb: GET
                              cache-response: time-to-live
                              cache-ttl: 60
                              version: 1.0.0
                              target-url: 'https://0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix:f8c5d0aedee17e9844aaa167dd824d75a0ba6ee77fa37d7eacd886677a07b3d7@0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix.cloudant.com/mail_piece_id/_design/mailPieceId/_search/getMailPieceIds?q=userId:$(request.parameters.userId) AND siteId:$(request.parameters.siteId) AND mailPieceId:"$(request.parameters.mailPieceId)"&sort="-lastUpdateDateTime"&include_docs=true'
                              output: cloudantGetResponse
                          - map:
                              title: map
                              inputs:
                                input:
                                  schema:
                                    description: ''
                                    type: object
                                    properties:
                                      total_rows:
                                        type: number
                                      bookmark:
                                        type: string
                                      rows:
                                        type: array
                                        items:
                                          properties:
                                            id:
                                              type: string
                                            order:
                                              type: array
                                              items:
                                                type: number
                                            fields:
                                              type: object
                                              properties: {}
                                            doc:
                                              type: object
                                              properties:
                                                _id:
                                                  type: string
                                                _rev:
                                                  type: string
                                                userId:
                                                  type: string
                                                siteId:
                                                  type: string
                                                mailPieceId:
                                                  type: string
                                                lastUpdateDateTime:
                                                  type: string
                                          type: object
                                    example: "{\r\n   \"total_rows\": 2,\r\n   \"bookmark\": \"g2wAAAABaANkACNkYmNvcmVAZGI2LmJtLWNjLXVrLTAxLmNsb3VkYW50Lm5ldGwAAAACbgQAAAAA8G4EAP____9qbAAAAAJGQrJYUGQKTQBhAmpq\",\r\n   \"rows\":    [\r\n            {\r\n         \"id\": \"c5761db30c0443aa858e1d2dffb29cc5\",\r\n         \"order\":          [\r\n            2.0170515155635E13,\r\n            4\r\n         ],\r\n         \"fields\": {},\r\n         \"doc\":          {\r\n            \"_id\": \"c5761db30c0443aa858e1d2dffb29cc5\",\r\n            \"_rev\": \"2-463656de83044052096b80f0b1b7aa72\",\r\n            \"userId\": \"mohiddin\",\r\n            \"siteId\": \"royalmail\",\r\n            \"mailPieceId\": \"AB12345678AD\",\r\n            \"lastUpdateDateTime\": \"20170515155635\"\r\n         }\r\n      },\r\n            {\r\n         \"id\": \"5f7e70bf45a98119b6dcd89bc6de5f82\",\r\n         \"order\":          [\r\n            2.0170515155533E13,\r\n            2\r\n         ],\r\n         \"fields\": {},\r\n         \"doc\":          {\r\n            \"_id\": \"5f7e70bf45a98119b6dcd89bc6de5f82\",\r\n            \"_rev\": \"1-deb9fa1b3a5355e3e4a55044baf05802\",\r\n            \"userId\": \"mohiddin\",\r\n            \"siteId\": \"royalmail\",\r\n            \"mailPieceId\": \"AB12345678AC\",\r\n            \"lastUpdateDateTime\": \"20170515155533\"\r\n         }\r\n      }\r\n   ]\r\n}"
                                  variable: cloudantGetResponse.body
                                  content: application/json
                              outputs:
                                output:
                                  schema:
                                    description: ''
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                      rev:
                                        type: string
                                    example: >-
                                      {

                                          "id":
                                      "c5761db30c0443aa858e1d2dffb29cc5",

                                          "rev":
                                      "2-463656de83044052096b80f0b1b7aa72"

                                      }
                                  variable: cloudantDeleteRequest.body
                                  content: application/json
                              actions:
                                - set: output.id
                                  from: input.rows.doc._id
                                - set: output.rev
                                  from: input.rows.doc._rev
                              version: 1.0.0
                          - invoke:
                              title: invokeDelete
                              timeout: 60
                              verb: DELETE
                              cache-response: time-to-live
                              version: 1.0.0
                              target-url: 'https://0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix:f8c5d0aedee17e9844aaa167dd824d75a0ba6ee77fa37d7eacd886677a07b3d7@0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix.cloudant.com/mail_piece_id/$(cloudantDeleteRequest.body.id)/?rev=$(cloudantDeleteRequest.body.rev)'
                              output: cloudantDeleteResponse
                              cache-ttl: 60
                          - invoke:
                              title: invokeReGet
                              timeout: 60
                              verb: GET
                              cache-response: time-to-live
                              version: 1.0.0
                              target-url: 'https://0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix:f8c5d0aedee17e9844aaa167dd824d75a0ba6ee77fa37d7eacd886677a07b3d7@0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix.cloudant.com/mail_piece_id/_design/mailPieceId/_search/getMailPieceIds?q=userId:$(request.parameters.userId) AND siteId:$(request.parameters.siteId)&sort="-lastUpdateDateTime"&limit=30&include_docs=true'
                              output: cloudantReGetResponse
                              cache-ttl: 60
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: "var mailPieceIds = [];\nvar inBody = apim.getvariable('cloudantReGetResponse.body'); \nvar inRows = inBody.rows;\nvar i=0;\nfor(i=0; i<inRows.length; i++){\n    mailPieceIds.push(inRows[i].doc.mailPieceId);\n}\nvar rtiOrderedList={\n\trtiOrderedList:[]\n};\nrtiOrderedList.rtiOrderedList=mailPieceIds;\napim.setvariable('rtiOrderedList',JSON.stringify(rtiOrderedList));\napim.setvariable('apiconnect','apiconnect');\nvar claims = apim.getvariable('decoded.claims');\nvar jsonClaims = JSON.parse(claims);\napim.setvariable('aud',jsonClaims.aud);\nvar exp = parseInt(jsonClaims.exp);\nvar curr = (Date.now()/1000);\nvar currS = curr.toString();\nvar currStr = currS.substr(0, currS.indexOf('.')); \nvar outexp = exp - parseInt(currStr);\napim.setvariable('exp',outexp);"
                          - jwt-generate:
                              title: jwt-generate
                              iss-claim: apiconnect
                              exp-claim: $(exp)
                              version: 1.0.0
                              description: ''
                              jwt: generatedJWT
                              aud-claim: aud
                              sub-claim: request.parameters.userId
                              jws-jwk: hs256-key
                              jws-alg: HS256
                              private-claims: rtiOrderedList
                          - map:
                              title: map
                              inputs:
                                input:
                                  schema:
                                    description: ''
                                    type: object
                                    properties:
                                      total_rows:
                                        type: number
                                      bookmark:
                                        type: string
                                      rows:
                                        type: array
                                        items:
                                          properties:
                                            id:
                                              type: string
                                            order:
                                              type: array
                                              items:
                                                type: number
                                            fields:
                                              type: object
                                              properties: {}
                                            doc:
                                              type: object
                                              properties:
                                                _id:
                                                  type: string
                                                _rev:
                                                  type: string
                                                userId:
                                                  type: string
                                                siteId:
                                                  type: string
                                                mailPieceId:
                                                  type: string
                                                lastUpdateDateTime:
                                                  type: string
                                          type: object
                                    example: "{\r\n   \"total_rows\": 2,\r\n   \"bookmark\": \"g2wAAAABaANkACNkYmNvcmVAZGI2LmJtLWNjLXVrLTAxLmNsb3VkYW50Lm5ldGwAAAACbgQAAAAA8G4EAP____9qbAAAAAJGQrJYUGQKTQBhAmpq\",\r\n   \"rows\":    [\r\n            {\r\n         \"id\": \"c5761db30c0443aa858e1d2dffb29cc5\",\r\n         \"order\":          [\r\n            2.0170515155635E13,\r\n            4\r\n         ],\r\n         \"fields\": {},\r\n         \"doc\":          {\r\n            \"_id\": \"c5761db30c0443aa858e1d2dffb29cc5\",\r\n            \"_rev\": \"2-463656de83044052096b80f0b1b7aa72\",\r\n            \"userId\": \"mohiddin\",\r\n            \"siteId\": \"royalmail\",\r\n            \"mailPieceId\": \"AB12345678AD\",\r\n            \"lastUpdateDateTime\": \"20170515155635\"\r\n         }\r\n      },\r\n            {\r\n         \"id\": \"5f7e70bf45a98119b6dcd89bc6de5f82\",\r\n         \"order\":          [\r\n            2.0170515155533E13,\r\n            2\r\n         ],\r\n         \"fields\": {},\r\n         \"doc\":          {\r\n            \"_id\": \"5f7e70bf45a98119b6dcd89bc6de5f82\",\r\n            \"_rev\": \"1-deb9fa1b3a5355e3e4a55044baf05802\",\r\n            \"userId\": \"mohiddin\",\r\n            \"siteId\": \"royalmail\",\r\n            \"mailPieceId\": \"AB12345678AC\",\r\n            \"lastUpdateDateTime\": \"20170515155533\"\r\n         }\r\n      }\r\n   ]\r\n}"
                                  variable: cloudantReGetResponse.body
                                  content: application/json
                              outputs:
                                output:
                                  schema:
                                    $ref: '#/definitions/rtiResponse'
                                  variable: message.body
                                  content: application/json
                              actions:
                                - create: output.mpDetails
                                  foreach: input.rows
                                  from: input.rows
                                  actions:
                                    - set: mailPieceId
                                      from: doc.mailPieceId
                                    - set: lastAccessedTimestamp
                                      from: doc.lastUpdateDateTime
                                - set: output.rtiOrderedList
                                  default: $(generatedJWT)
                              version: 1.0.0
                    version: 1.0.0
            - operations:
                - summary
              execute:
                - switch:
                    title: switch
                    case:
                      - condition: "apim.getvariable('isError')==true"
                        execute:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: |
                                var errResp = apim.getvariable('errResp');
                                apim.setvariable('message.status.code','401');
                                apim.setvariable('message.body', errResp);
                      - otherwise:
                          - jwt-validate:
                              title: jwt-validate
                              jwt: request.headers.x-rmg-auth-token
                              output-claims: decoded.claims
                              version: 1.0.0
                              iss-claim: eBusiness
                              aud-claim: TAPIv2
                              jws-jwk: hs256-key
                          - jwt-validate:
                              title: jwt-validate
                              jwt: request.parameters.mailPieceId
                              output-claims: request.claims
                              version: 1.0.0
                              iss-claim: apiconnect
                              aud-claim: TAPIv2
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: >
                                var claims = apim.getvariable('request.claims');

                                var claimsJSON = JSON.parse(claims);

                                var rtiOrderedList = claimsJSON.rtiOrderedList;

                                var mailPieceIds = [];

                                for(var i=0;i<

                                rtiOrderedList.length;i++){

                                        mailPieceIds.push(rtiOrderedList[i]);

                                }

                                apim.setvariable('mailPieceId',
                                mailPieceIds.toString());
                          - switch:
                              title: switch
                              case:
                                - condition: "apim.getvariable('mailPieceId')==undefined;"
                                  execute:
                                    - gatewayscript:
                                        title: gatewayscript
                                        version: 1.0.0
                                        source: " var error= {           \r\n         \"httpCode\": \"400\",\r\n         \"httpMessage\": \"Bad Request\",  \r\n         \"errors\": \r\n                 {\r\n                          \"errorCode\": \"E1142\",\r\n                          \"errorDescription\": \"Please enter the 1D or 2D barcode tracking number\", \r\n                          \"errorResolution\": \"Check barcode and resubmit\"\r\n                 }\r\n         } \r\n         apim.setvariable('message.status.code','400');\r\n         session.output.write(error);\r\n         apim.output('application/json');\r\n         \r\n         \r\n //default error when no mailpieceId is quired"
                                - otherwise:
                                    - gatewayscript:
                                        title: gatewayscript
                                        version: 1.0.0
                                        source: "var mpIds = apim.getvariable('mailPieceId');  //comma separated queried MailPieceIds\r\nvar mpIdsArr = mpIds.split(\",\");                                 //array generatef from string of MailPieceIds\r\nvar mpIdsValid = [];                                             //blank array to store valid MailPieceIds\r\nvar mpIdsInValid = [];                                            //balnk array to store inavlid MailPieceIds\r\n\r\napim.setvariable('mpIdsArr',mpIdsArr);\r\nif(mpIdsArr.length>30)                                           //check number of MailPieceIds quired \r\n{\r\napim.setvariable('mpIdsInValid',mpIdsInValid); \r\n} \r\n\r\nelse{\r\nfor(var i=0; i<mpIdsArr.length; i++){                            //length check for each MailPieceIds\r\n  if ( mpIdsArr[i].length === 9 || mpIdsArr[i].length === 11 || mpIdsArr[i].length === 12 || mpIdsArr[i].length === 13 || mpIdsArr[i].length === 14 || mpIdsArr[i].length === 16 || mpIdsArr[i].length === 21 )\r\n     { \r\n\t mpIdsValid.push(mpIdsArr[i]);\r\n    }\r\n else\r\n    {\r\n\t mpIdsInValid.push(mpIdsArr[i]);\r\n    }   \r\n};  \r\napim.setvariable('mpIdsValid[0]',mpIdsValid[0]); \r\n\r\nvar strMpIds = mpIdsValid.toString();                              //creating string from array\r\napim.setvariable('strMpIds',strMpIds);\r\napim.setvariable('mpIdsInValid',mpIdsInValid);\r\n}\r\napim.setvariable('message.headers.X-RMG-Client-Id',apim.getvariable('client.app.id'));\r\napim.setvariable('message.headers.X-RMG-Auth-Token',undefined);"
                                    - switch:
                                        title: switch
                                        case:
                                          - condition: "apim.getvariable('request.parameters.mailPieceId')==undefined;"
                                            execute:
                                              - gatewayscript:
                                                  title: gatewayscript
                                                  version: 1.0.0
                                                  source: "var mpIdsInValid = apim.getvariable('mpIdsInValid'); \r\nvar errorResponse = [];                                            \r\nif(mpIdsInValid[0]==undefined){                                   //if MailPieceIds quired is more than 30\r\n   var error= {\r\n         \"httpCode\": \"400\",\r\n         \"httpMessage\": \"Bad Request\", \r\n         \"errors\": \r\n                 {\r\n                          \"errorCode\": \"E0013\",\r\n                          \"errorDescription\": \"Maximum parameters permitted in URL exceeded\",\r\n                          \"errorResolution\": \"Check barcodes and resubmit\"\r\n                 }\r\n         } \r\n         apim.setvariable('message.status.code','400');\r\n         session.output.write(error);\r\n}\r\nelse{\r\nfor(var i=0; i<mpIdsInValid.length; i++){                         \r\nvar error= {\r\n         \"httpCode\": \"400\",\r\n         \"httpMessage\": \"Bad Request\",\r\n         \"errors\": \r\n                 {\r\n                          \"errorCode\": \"E1142\", \r\n                          \"errorDescription\": \"Barcode reference \"+ mpIdsInValid[i] + \" isn't recognised\",\r\n                          \"errorResolution\": \"Check barcode and resubmit\"\r\n                 }\r\n         } \r\n         errorResponse.push(error);\r\n        };\r\n  \r\nsession.output.write(errorResponse);                  //generated errorResponse for invalid MailPieceIds\r\napim.setvariable('message.status.code','400');\r\n}\r\napim.output('application/json');"
                                          - otherwise:
                                              - invoke:
                                                  title: invokeSummary
                                                  timeout: 60
                                                  verb: GET
                                                  cache-response: time-to-live
                                                  version: 1.0.0
                                                  target-url: 'http://129.185.160.215:8088/mailpieces/v2/summary?mailPieceId=$(strMpIds)'
                                                  output: responseSummary
                                                  cache-ttl: 60
                                              - map:
                                                  title: map
                                                  inputs:
                                                    summary:
                                                      schema:
                                                        $ref: '#/definitions/summarySuccessOutput'
                                                      variable: responseSummary.body
                                                      content: application/json
                                                  outputs:
                                                    output:
                                                      schema:
                                                        $ref: '#/definitions/summarySuccessResponse'
                                                      variable: message.body
                                                      content: application/json
                                                    output_1:
                                                      schema:
                                                        $ref: '#/definitions/errorResponse'
                                                      variable: message.body
                                                      content: application/json
                                                  actions:
                                                    - set: output_1.httpCode
                                                      default: $(responseSummary.status.code)
                                                    - set: output_1.httpMessage
                                                      default: $(responseSummary.status.reason)
                                                    - create: output.mailPieces
                                                      foreach: summary.mailPieces
                                                      from: summary.mailPieces
                                                      actions:
                                                        - set: mailPieceId
                                                          from: mailPieceId
                                                        - set: status
                                                          from: status
                                                        - set: carrierShortName
                                                          from: carrierShortName
                                                        - set: carrierFullName
                                                          from: carrierFullName
                                                        - set: summary.uniqueItemId
                                                          from: summary.uniqueItemId
                                                        - set: summary.oneDBarcode
                                                          from: summary.oneDBarcode
                                                        - set: summary.productId
                                                          from: summary.productId
                                                        - set: summary.productName
                                                          from: summary.productName
                                                        - set: summary.productDescription
                                                          from: summary.productDescription
                                                        - set: summary.productCategory
                                                          from: summary.productCategory
                                                        - set: summary.destinationCountryCode
                                                          from: summary.destinationCountryCode
                                                        - set: summary.destinationCountryName
                                                          from: summary.destinationCountryName
                                                        - set: summary.originCountryCode
                                                          from: summary.originCountryCode
                                                        - set: summary.originCountryName
                                                          from: summary.originCountryName
                                                        - set: summary.lastEventCode
                                                          from: summary.lastEventCode
                                                        - set: summary.lastEventName
                                                          from: summary.lastEventName
                                                        - set: summary.lastEventDateTime
                                                          from: summary.lastEventDateTime
                                                        - set: summary.lastEventLocationName
                                                          from: summary.lastEventLocationName
                                                        - set: summary.statusDescription
                                                          from: summary.statusDescription
                                                        - set: summary.statusCategory
                                                          from: summary.statusCategory
                                                        - set: summary.statusHelpText
                                                          from: summary.statusHelpText
                                                        - set: summary.summaryLine
                                                          from: summary.summaryLine
                                                        - set: summary.internationalPostalProvider.url
                                                          from: summary.internationalPostalProvider.url
                                                        - set: summary.internationalPostalProvider.title
                                                          from: summary.internationalPostalProvider.title
                                                        - set: summary.internationalPostalProvider.description
                                                          from: summary.internationalPostalProvider.description
                                                        - set: links.events.href
                                                          from: links.events.href
                                                        - set: links.events.title
                                                          from: links.events.title
                                                        - set: links.events.description
                                                          from: links.events.description
                                                        - set: error.errorCode
                                                          from: error.errorCode
                                                        - set: error.errorDescription
                                                          from: error.errorDescription
                                                        - set: error.errorCause
                                                          from: error.errorCause
                                                        - set: error.errorResolution
                                                          from: error.errorResolution
                                                    - create: output_1.errors
                                                      foreach: summary.integrationFooter.errors
                                                      from: summary.integrationFooter.errors
                                                      actions:
                                                        - set: errorCode
                                                          from: errorCode
                                                        - set: errorDescription
                                                          from: errorDescription
                                                        - set: errorCause
                                                          from: errorCause
                                                        - set: errorResolution
                                                          from: errorResolution
                                                  version: 1.0.0
                                                  options:
                                                    includeEmptyXMLElements: false
                                              - gatewayscript:
                                                  title: gatewayscript
                                                  version: 1.0.0
                                                  source: "var bodyResp = apim.getvariable('message.body');                        //response body from backend\r\nvar mpIdsInValid = apim.getvariable('mpIdsInValid');                    //inValid mailPieceIds array\r\nvar mpIdsArr = apim.getvariable('mpIdsArr');                            //mailPieceIds quired \r\nvar errorResponse = [];                                                 //errorResponse to be generated on APIM\r\nvar errorStatusResponse = [];                                \r\nvar errorIntFooter = [];                                                \r\nvar x = 0;\r\nvar Response = []; \r\n\r\nif(bodyResp.errors[0]==undefined){                                       //if no integration footer is coming from BIG\r\nfor(var i=0; i<mpIdsInValid.length; i++){\r\nvar errorResp = {\r\n           \"mailPieceId\":mpIdsInValid[i],\r\n           \"status\":\"400\",\r\n           \"errors\": \r\n                 {\r\n                          \"errorCode\": \"E1142\",\r\n                          \"errorDescription\": \"Barcode reference \"+ mpIdsInValid[i] + \" isn't recognised\",\r\n                          \"errorResolution\": \"Check barcode and resubmit\"\r\n                 }\r\n         }\r\n           \r\n            errorResponse.push(errorResp);\r\n} \r\n\r\nwhile(x<mpIdsArr.length){                                     //for sequencing of valid response from backend and invalid error of APIM\r\n  var y=0;\r\n  \r\n  var found = false;\r\n  \r\n  while(y<bodyResp.mailPieces.length){\r\n    \r\n\tif(mpIdsArr[x]==bodyResp.mailPieces[y].mailPieceId){\r\n\t    Response.push(bodyResp.mailPieces[y]);\r\n\t\r\n\t\tfound = true;\r\n\t\tbreak;\r\n\t}\r\n\ty++;\r\n  }\r\n  var z = 0;\r\n  if(found == false){\r\n   while(z<errorResponse.length){\r\n\tif(mpIdsArr[x]==errorResponse[z].mailPieceId){\r\n\t    Response.push(errorResponse[z]);\r\n\t\tbreak;\r\n\t}\r\n\tz++;\r\n  }\r\n  }\r\n  x++;\r\n }\r\ndelete bodyResp.httpCode;\r\ndelete bodyResp.httpMessage;\r\ndelete bodyResp.errors;\r\napim.setvariable('message.body',Response);\r\n}\r\n\r\n else{\r\n\r\n   for(var i=0; i<mpIdsInValid.length; i++){\r\n      var errorResp = {\r\n                      \"mailPieceId\":mpIdsInValid[i],\r\n                      \"status\":\"400\"\r\n                      };\r\n           var erroR = {\r\n                          \"errorCode\": \"E1142\",\r\n                          \"errorDescription\": \"Barcode reference \"+ mpIdsInValid[i] + \" isn't recognised\",\r\n                          \"errorResolution\": \"Check barcode and resubmit\"\r\n                 };\r\n            errorStatusResponse.push(errorResp);\r\n            errorIntFooter.push(erroR);\r\n     } \r\nwhile(x<mpIdsArr.length){\r\n  var y=0;\r\n  \r\n  var found = false;\r\n  \r\n  while(y<bodyResp.mailPieces.length){\r\n    \r\n\tif(mpIdsArr[x]==bodyResp.mailPieces[y].mailPieceId){\r\n\t    Response.push(bodyResp.mailPieces[y]);\r\n\t\r\n\t\tfound = true;\r\n\t\tbreak;\r\n\t}\r\n\ty++;\r\n  }\r\n  var z = 0;\r\n  if(found == false){\r\n   while(z<errorStatusResponse.length){\r\n\tif(mpIdsArr[x]==errorStatusResponse[z].mailPieceId){\r\n\t    Response.push(errorStatusResponse[z]);\r\n\t\tbreak;\r\n\t}\r\n\tz++;\r\n  }\r\n  }\r\n  x++;\r\n }\r\nvar responseFinal={\r\n\t\"mailPieces\": Response,\r\n\t\"httpCode\": bodyResp.httpCode,\r\n\t\"httpMessage\": bodyResp.httpMessage,\r\n\t\t\"errors\": bodyResp.errors\r\n\t} \r\n\t\r\n if(responseFinal.mailPieces[0]==undefined){\r\n     delete responseFinal.mailPieces; \r\n  }\r\n\r\napim.setvariable('message.body',responseFinal);\r\n} \r\n\r\n"
                                        version: 1.0.0
                              version: 1.0.0
                    version: 1.0.0
            - operations:
                - events
              execute:
                - switch:
                    title: switch
                    case:
                      - condition: "apim.getvariable('request.headers.x-rmg-auth-token')"
                        execute:
                          - jwt-validate:
                              title: jwt-validate
                              jwt: request.headers.x-rmg-auth-token
                              output-claims: decoded.claims
                              version: 1.0.0
                              iss-claim: eBusiness
                              aud-claim: TAPIv2
                              jws-jwk: hs256-key
                      - otherwise: []
                    version: 1.0.0
                - switch:
                    title: switch
                    case:
                      - condition: "apim.getvariable('request.headers.x-recaptcha-response')"
                        execute:
                          - invoke:
                              title: invokeGoogleCaptcha
                              timeout: 60
                              verb: GET
                              cache-response: protocol
                              cache-ttl: 900
                              version: 1.0.0
                              target-url: 'https://www.google.com/recaptcha/api/siteverify?secret=6LchQRoUAAAAAJ6ds_3EQgqkPwruv9Gr_MgvfJMX&response=$(request.headers.x-recaptcha-response)'
                              output: googleCaptchaResp
                          - switch:
                              title: switch
                              case:
                                - condition: "apim.getvariable('googleCaptchaResp').body.success ==true;"
                                  execute:
                                    - gatewayscript:
                                        title: gatewayscript
                                        version: 1.0.0
                                        source: "var mpId = apim.getvariable('request.parameters.mailPieceId');       //quired mailPieceId\r\nvar mpIdArr = mpId.split(\",\");   \r\napim.setvariable('mpIdArr',mpIdArr);                          \r\nvar bodyResp = {                                              //bodyResp of APIM incase of bad request\r\n         \"httpCode\": \"400\",\r\n         \"httpMessage\": \"Bad Request\", \r\n         \"errors\": [\r\n                 {\r\n                          \"errorCode\": \"E1142\",\r\n                          \"errorDescription\": \"Barcode reference \"+ mpId+ \" isn't recognised\", \r\n                          \"errorResolution\": \"Check barcode and resubmit\"\r\n                 }\r\n         ]\r\n};\r\nif(mpIdArr.length>1){\r\n    apim.setvariable('bodyResp',bodyResp);\r\n} \r\n\r\nelse{                                                               //length check\r\n \r\n  if ( mpId.length === 9 || mpId.length === 11 || mpId.length === 12 || mpId.length === 13 || mpId.length === 14 || mpId.length === 16 || mpId.length === 21 ) {\r\n\r\n    apim.setvariable('mpId',mpId);\r\n\r\n    } \r\n    \r\n  else {\r\n  \r\n  apim.setvariable('bodyResp',bodyResp);\r\n  \r\n  }  \r\n}\r\napim.setvariable('message.headers.X-RMG-Client-Id',apim.getvariable('client.app.id'));\r\n"
                                    - switch:
                                        title: switch
                                        case:
                                          - condition: "apim.getvariable('bodyResp')"
                                            execute:
                                              - gatewayscript:
                                                  title: gatewayscript
                                                  version: 1.0.0
                                                  source: "var mpIdArr = apim.getvariable('mpIdArr');  \nvar bodyResp = apim.getvariable('bodyResp');\nvar statusCode;\nif(mpIdArr[1]){\n   var error= {\n         \"httpCode\": \"400\",\n         \"httpMessage\": \"Bad Request\", \n         \"errors\": \n                 {\n                          \"errorCode\": \"E0013\",\n                          \"errorDescription\": \"Maximum parameters permitted in URL exceeded\",\n                          \"errorResolution\": \"Check barcode and resubmit\"\n                 }\n         }\n         apim.setvariable('bodyResp','error');\n         apim.setvariable('statusCode','400');\n         apim.setvariable('errorCode','E0013');\n}\nelse{\napim.setvariable('bodyResp',bodyResp);\napim.setvariable('statusCode','400');\napim.setvariable('errorCode','');\n}\n"
                                          - otherwise:
                                              - invoke:
                                                  title: invokeEvents
                                                  timeout: 60
                                                  verb: GET
                                                  cache-response: time-to-live
                                                  cache-ttl: 60
                                                  version: 1.0.0
                                                  cache-key: ''
                                                  target-url: 'http://129.185.160.215:8088/mailpieces/v2/$(request.parameters.mailPieceId)/events'
                                                  output: eventsResponse
                                              - map:
                                                  title: map
                                                  inputs:
                                                    input:
                                                      schema:
                                                        $ref: '#/definitions/eventsSuccessOutput'
                                                      variable: eventsResponse.body
                                                      content: application/json
                                                  outputs:
                                                    output:
                                                      schema:
                                                        $ref: '#/definitions/eventsSuccessResponse'
                                                      variable: message.body
                                                      content: application/json
                                                    output_1:
                                                      schema:
                                                        $ref: '#/definitions/errorResponse'
                                                      variable: message.body
                                                      content: application/json
                                                  actions:
                                                    - set: output.mailPieces.mailPieceId
                                                      from: input.mailPieces.mailPieceId
                                                    - set: output.mailPieces.carrierShortName
                                                      from: input.mailPieces.carrierShortName
                                                    - set: output.mailPieces.carrierFullName
                                                      from: input.mailPieces.carrierFullName
                                                    - set: output.mailPieces.summary.uniqueItemId
                                                      from: input.mailPieces.summary.uniqueItemId
                                                    - set: output.mailPieces.summary.oneDBarcode
                                                      from: input.mailPieces.summary.oneDBarcode
                                                    - set: output.mailPieces.summary.productId
                                                      from: input.mailPieces.summary.productId
                                                    - set: output.mailPieces.summary.productName
                                                      from: input.mailPieces.summary.productName
                                                    - set: output.mailPieces.summary.productDescription
                                                      from: input.mailPieces.summary.productDescription
                                                    - set: output.mailPieces.summary.productCategory
                                                      from: input.mailPieces.summary.productCategory
                                                    - set: output.mailPieces.summary.destinationCountryCode
                                                      from: input.mailPieces.summary.destinationCountryCode
                                                    - set: output.mailPieces.summary.destinationCountryName
                                                      from: input.mailPieces.summary.destinationCountryName
                                                    - set: output.mailPieces.summary.originCountryCode
                                                      from: input.mailPieces.summary.originCountryCode
                                                    - set: output.mailPieces.summary.originCountryName
                                                      from: input.mailPieces.summary.originCountryName
                                                    - set: output.mailPieces.summary.lastEventCode
                                                      from: input.mailPieces.summary.lastEventCode
                                                    - set: output.mailPieces.summary.lastEventName
                                                      from: input.mailPieces.summary.lastEventName
                                                    - set: output.mailPieces.summary.lastEventDateTime
                                                      from: input.mailPieces.summary.lastEventDateTime
                                                    - set: output.mailPieces.summary.lastEventLocationName
                                                      from: input.mailPieces.summary.lastEventLocationName
                                                    - set: output.mailPieces.summary.statusDescription
                                                      from: input.mailPieces.summary.statusDescription
                                                    - set: output.mailPieces.summary.statusCategory
                                                      from: input.mailPieces.summary.statusCategory
                                                    - set: output.mailPieces.summary.statusHelpText
                                                      from: input.mailPieces.summary.statusHelpText
                                                    - set: output.mailPieces.summary.summaryLine
                                                      from: input.mailPieces.summary.summaryLine
                                                    - set: output.mailPieces.summary.internationalPostalProvider
                                                      from: input.mailPieces.summary.internationalPostalProvider
                                                    - set: output.mailPieces.summary.internationalPostalProvider.url
                                                      from: input.mailPieces.summary.internationalPostalProvider.url
                                                    - set: output.mailPieces.summary.internationalPostalProvider.title
                                                      from: input.mailPieces.summary.internationalPostalProvider.title
                                                    - set: output.mailPieces.summary.internationalPostalProvider.description
                                                      from: input.mailPieces.summary.internationalPostalProvider.description
                                                    - set: output.mailPieces.signature.recipientName
                                                      from: input.mailPieces.signature.recipientName
                                                    - set: output.mailPieces.signature.signatureDateTime
                                                      from: input.mailPieces.signature.signatureDateTime
                                                    - set: output.mailPieces.signature.imageId
                                                      from: input.mailPieces.signature.imageId
                                                    - set: output.mailPieces.estimatedDelivery.date
                                                      from: input.mailPieces.estimatedDelivery.date
                                                    - set: output.mailPieces.estimatedDelivery.startOfEstimatedWindow
                                                      from: input.mailPieces.estimatedDelivery.startOfEstimatedWindow
                                                    - set: output.mailPieces.estimatedDelivery.endOfEstimatedWindow
                                                      from: input.mailPieces.estimatedDelivery.endOfEstimatedWindow
                                                    - create: output.mailPieces.events
                                                      foreach: input.mailPieces.events
                                                      from: input.mailPieces.events
                                                      actions:
                                                        - set: eventCode
                                                          from: eventCode
                                                        - set: eventName
                                                          from: eventName
                                                        - set: eventDateTime
                                                          from: eventDateTime
                                                        - set: locationName
                                                          from: locationName
                                                    - set: output.mailPieces.links.summary.href
                                                      from: input.mailPieces.links.summary.href
                                                    - set: output.mailPieces.links.summary.title
                                                      from: input.mailPieces.links.summary.title
                                                    - set: output.mailPieces.links.summary.description
                                                      from: input.mailPieces.links.summary.description
                                                    - set: output.mailPieces.links.signature.href
                                                      from: input.mailPieces.links.signature.href
                                                    - set: output.mailPieces.links.signature.title
                                                      from: input.mailPieces.links.signature.title
                                                    - set: output.mailPieces.links.signature.description
                                                      from: input.mailPieces.links.signature.description
                                                    - set: output.mailPieces.links.signatureimage.href
                                                      from: input.mailPieces.links.signatureimage.href
                                                    - set: output.mailPieces.links.signatureimage.title
                                                      from: input.mailPieces.links.signatureimage.title
                                                    - set: output.mailPieces.links.signatureimage.description
                                                      from: input.mailPieces.links.signatureimage.description
                                                    - set: output.mailPieces.links.redelivery.href
                                                      from: input.mailPieces.links.redelivery.href
                                                    - set: output.mailPieces.links.redelivery.title
                                                      from: input.mailPieces.links.redelivery.title
                                                    - set: output.mailPieces.links.redelivery.description
                                                      from: input.mailPieces.links.redelivery.description
                                                    - set: output_1.httpCode
                                                      default: $(eventsResponse.status.code)
                                                    - set: output_1.httpMessage
                                                      default: $(eventsResponse.status.reason)
                                                    - create: output_1.errors
                                                      foreach: input.integrationFooter.errors
                                                      from: input.integrationFooter.errors
                                                      actions:
                                                        - set: errorCode
                                                          from: errorCode
                                                        - set: errorDescription
                                                          from: errorDescription
                                                        - set: errorCause
                                                          from: errorCause
                                                        - set: errorResolution
                                                          from: errorResolution
                                                  version: 1.0.0
                                                  options:
                                                    namespaceInheritance: false
                                                    inlineNamespaces: false
                                              - gatewayscript:
                                                  title: gatewayscript
                                                  version: 1.0.0
                                                  source: >-
                                                    var bodyResp
                                                    = apim.getvariable('message.body');

                                                    var eventsResponse
                                                    = apim.getvariable('eventsResponse');



                                                     if(bodyResp.mailPieces.events[0]==undefined){        //chec

                                                     whether body is coming with events

                                                        delete bodyResp.mailPieces;

                                                     }

                                                     else if(bodyResp.errors[0] ==

                                                    undefined){          //check whether body
                                                    is coming with integration footer

                                                       delete bodyResp.httpCode;

                                                       delete bodyResp.httpMessage;

                                                       delete bodyResp.errors;

                                                     }

                                                     var statusCode

                                                    = eventsResponse.status.code;

                                                     var errorCode = '';

                                                     if (statusCode=='200'){

                                                     }else{

                                                         //Fetch the error code

                                                         errorCode

                                                    =
                                                    eventsResponse.integrationFooter.errors[0].errorCode;

                                                     }

                                                     apim.setvariable('errorCode',

                                                    errorCode);

                                                     apim.setvariable('bodyResp',bodyResp);



                                                     apim.setvariable('statusCode',



















                                                    statusCode);
                                        version: 1.0.0
                                    - gatewayscript:
                                        title: gatewayscript
                                        version: 1.0.0
                                        source: >-
                                          apim.setvariable('apiconnect',"apiconnect");

                                          apim.setvariable('TAPIv2',"TAPIv2");
                                    - jwt-generate:
                                        title: jwt-generate
                                        iss-claim: apiconnect
                                        exp-claim: 36000
                                        version: 1.0.0
                                        jwt: x-recaptcha-session
                                        aud-claim: TAPIv2
                                        jws-jwk: hs256-key
                                        jws-alg: HS256
                                - otherwise:
                                    - gatewayscript:
                                        title: gatewayscript
                                        version: 1.0.0
                                        source: |
                                          var verified = 'false';
                                          apim.setvariable('verified',verified);
                              version: 1.0.0
                      - condition: "apim.getvariable('request.headers.x-recaptcha-session')"
                        execute:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: "var cookie = apim.getvariable('request.headers.cookie');\r\nvar recaptchaSession = apim.getvariable('request.headers.x-recaptcha-session');\r\n\r\nvar cookieGet = readCookie('recaptcha-session',cookie);\r\n\r\nfunction readCookie(key,cookie)\r\n{\r\n    var result;\r\n    return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(cookie)) ? (result[1]) : null;\r\n};\r\n\r\nif(cookieGet==recaptchaSession){\r\n    \r\n}else{\r\n    apim.setvariable('verified','false');\r\n}"
                          - jwt-validate:
                              title: jwt-validate
                              jwt: request.headers.x-recaptcha-session
                              output-claims: session.claims
                              version: 1.0.0
                              iss-claim: apiconnect
                              jws-jwk: hs256-key
                              aud-claim: TAPIv2
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: "var mpId = apim.getvariable('request.parameters.mailPieceId');       //quired mailPieceId\r\nvar mpIdArr = mpId.split(\",\");   \r\napim.setvariable('mpIdArr',mpIdArr);                          \r\nvar bodyResp = {                                              //bodyResp of APIM incase of bad request\r\n         \"httpCode\": \"400\",\r\n         \"httpMessage\": \"Bad Request\", \r\n         \"errors\": [\r\n                 {\r\n                          \"errorCode\": \"E1142\",\r\n                          \"errorDescription\": \"Barcode reference \"+ mpId+ \" isn't recognised\", \r\n                          \"errorResolution\": \"Check barcode and resubmit\"\r\n                 }\r\n         ]\r\n};\r\nif(mpIdArr.length>1){\r\n    apim.setvariable('bodyResp',bodyResp);\r\n} \r\n\r\nelse{                                                               //length check\r\n \r\n  if ( mpId.length === 9 || mpId.length === 11 || mpId.length === 12 || mpId.length === 13 || mpId.length === 14 || mpId.length === 16 || mpId.length === 21 ) {\r\n\r\n    apim.setvariable('mpId',mpId);\r\n\r\n    } \r\n    \r\n  else {\r\n  \r\n  apim.setvariable('bodyResp',bodyResp);\r\n  \r\n  }  \r\n}\r\napim.setvariable('message.headers.X-RMG-Client-Id',apim.getvariable('client.app.id'));\r\n"
                          - switch:
                              title: switch
                              case:
                                - condition: "apim.getvariable('bodyResp')"
                                  execute:
                                    - gatewayscript:
                                        title: gatewayscript
                                        version: 1.0.0
                                        source: "var mpIdArr = apim.getvariable('mpIdArr');  \nvar bodyResp = apim.getvariable('bodyResp');\nvar statusCode;\nif(mpIdArr[1]){\n   var error= {\n         \"httpCode\": \"400\",\n         \"httpMessage\": \"Bad Request\", \n         \"errors\": \n                 {\n                          \"errorCode\": \"E0013\",\n                          \"errorDescription\": \"Maximum parameters permitted in URL exceeded\",\n                          \"errorResolution\": \"Check barcode and resubmit\"\n                 }\n         }\n         apim.setvariable('bodyResp','error');\n         apim.setvariable('statusCode','400');\n         apim.setvariable('errorCode','E0013');\n}\nelse{\napim.setvariable('bodyResp',bodyResp);\napim.setvariable('statusCode','400');\napim.setvariable('errorCode','');\n}\n"
                                - otherwise:
                                    - invoke:
                                        title: invokeEvents
                                        timeout: 60
                                        verb: GET
                                        cache-response: time-to-live
                                        cache-ttl: 60
                                        version: 1.0.0
                                        cache-key: ''
                                        target-url: 'http://129.185.160.215:8088/mailpieces/v2/$(request.parameters.mailPieceId)/events'
                                        output: eventsResponse
                                    - map:
                                        title: map
                                        inputs:
                                          input:
                                            schema:
                                              $ref: '#/definitions/eventsSuccessOutput'
                                            variable: eventsResponse.body
                                            content: application/json
                                        outputs:
                                          output:
                                            schema:
                                              $ref: '#/definitions/eventsSuccessResponse'
                                            variable: message.body
                                            content: application/json
                                          output_1:
                                            schema:
                                              $ref: '#/definitions/errorResponse'
                                            variable: message.body
                                            content: application/json
                                        actions:
                                          - set: output.mailPieces.mailPieceId
                                            from: input.mailPieces.mailPieceId
                                          - set: output.mailPieces.carrierShortName
                                            from: input.mailPieces.carrierShortName
                                          - set: output.mailPieces.carrierFullName
                                            from: input.mailPieces.carrierFullName
                                          - set: output.mailPieces.summary.uniqueItemId
                                            from: input.mailPieces.summary.uniqueItemId
                                          - set: output.mailPieces.summary.oneDBarcode
                                            from: input.mailPieces.summary.oneDBarcode
                                          - set: output.mailPieces.summary.productId
                                            from: input.mailPieces.summary.productId
                                          - set: output.mailPieces.summary.productName
                                            from: input.mailPieces.summary.productName
                                          - set: output.mailPieces.summary.productDescription
                                            from: input.mailPieces.summary.productDescription
                                          - set: output.mailPieces.summary.productCategory
                                            from: input.mailPieces.summary.productCategory
                                          - set: output.mailPieces.summary.destinationCountryCode
                                            from: input.mailPieces.summary.destinationCountryCode
                                          - set: output.mailPieces.summary.destinationCountryName
                                            from: input.mailPieces.summary.destinationCountryName
                                          - set: output.mailPieces.summary.originCountryCode
                                            from: input.mailPieces.summary.originCountryCode
                                          - set: output.mailPieces.summary.originCountryName
                                            from: input.mailPieces.summary.originCountryName
                                          - set: output.mailPieces.summary.lastEventCode
                                            from: input.mailPieces.summary.lastEventCode
                                          - set: output.mailPieces.summary.lastEventName
                                            from: input.mailPieces.summary.lastEventName
                                          - set: output.mailPieces.summary.lastEventDateTime
                                            from: input.mailPieces.summary.lastEventDateTime
                                          - set: output.mailPieces.summary.lastEventLocationName
                                            from: input.mailPieces.summary.lastEventLocationName
                                          - set: output.mailPieces.summary.statusDescription
                                            from: input.mailPieces.summary.statusDescription
                                          - set: output.mailPieces.summary.statusCategory
                                            from: input.mailPieces.summary.statusCategory
                                          - set: output.mailPieces.summary.statusHelpText
                                            from: input.mailPieces.summary.statusHelpText
                                          - set: output.mailPieces.summary.summaryLine
                                            from: input.mailPieces.summary.summaryLine
                                          - set: output.mailPieces.summary.internationalPostalProvider
                                            from: input.mailPieces.summary.internationalPostalProvider
                                          - set: output.mailPieces.summary.internationalPostalProvider.url
                                            from: input.mailPieces.summary.internationalPostalProvider.url
                                          - set: output.mailPieces.summary.internationalPostalProvider.title
                                            from: input.mailPieces.summary.internationalPostalProvider.title
                                          - set: output.mailPieces.summary.internationalPostalProvider.description
                                            from: input.mailPieces.summary.internationalPostalProvider.description
                                          - set: output.mailPieces.signature.recipientName
                                            from: input.mailPieces.signature.recipientName
                                          - set: output.mailPieces.signature.signatureDateTime
                                            from: input.mailPieces.signature.signatureDateTime
                                          - set: output.mailPieces.signature.imageId
                                            from: input.mailPieces.signature.imageId
                                          - set: output.mailPieces.estimatedDelivery.date
                                            from: input.mailPieces.estimatedDelivery.date
                                          - set: output.mailPieces.estimatedDelivery.startOfEstimatedWindow
                                            from: input.mailPieces.estimatedDelivery.startOfEstimatedWindow
                                          - set: output.mailPieces.estimatedDelivery.endOfEstimatedWindow
                                            from: input.mailPieces.estimatedDelivery.endOfEstimatedWindow
                                          - create: output.mailPieces.events
                                            foreach: input.mailPieces.events
                                            from: input.mailPieces.events
                                            actions:
                                              - set: eventCode
                                                from: eventCode
                                              - set: eventName
                                                from: eventName
                                              - set: eventDateTime
                                                from: eventDateTime
                                              - set: locationName
                                                from: locationName
                                          - set: output.mailPieces.links.summary.href
                                            from: input.mailPieces.links.summary.href
                                          - set: output.mailPieces.links.summary.title
                                            from: input.mailPieces.links.summary.title
                                          - set: output.mailPieces.links.summary.description
                                            from: input.mailPieces.links.summary.description
                                          - set: output.mailPieces.links.signature.href
                                            from: input.mailPieces.links.signature.href
                                          - set: output.mailPieces.links.signature.title
                                            from: input.mailPieces.links.signature.title
                                          - set: output.mailPieces.links.signature.description
                                            from: input.mailPieces.links.signature.description
                                          - set: output.mailPieces.links.signatureimage.href
                                            from: input.mailPieces.links.signatureimage.href
                                          - set: output.mailPieces.links.signatureimage.title
                                            from: input.mailPieces.links.signatureimage.title
                                          - set: output.mailPieces.links.signatureimage.description
                                            from: input.mailPieces.links.signatureimage.description
                                          - set: output.mailPieces.links.redelivery.href
                                            from: input.mailPieces.links.redelivery.href
                                          - set: output.mailPieces.links.redelivery.title
                                            from: input.mailPieces.links.redelivery.title
                                          - set: output.mailPieces.links.redelivery.description
                                            from: input.mailPieces.links.redelivery.description
                                          - set: output_1.httpCode
                                            default: $(eventsResponse.status.code)
                                          - set: output_1.httpMessage
                                            default: $(eventsResponse.status.reason)
                                          - create: output_1.errors
                                            foreach: input.integrationFooter.errors
                                            from: input.integrationFooter.errors
                                            actions:
                                              - set: errorCode
                                                from: errorCode
                                              - set: errorDescription
                                                from: errorDescription
                                              - set: errorCause
                                                from: errorCause
                                              - set: errorResolution
                                                from: errorResolution
                                        version: 1.0.0
                                        options:
                                          namespaceInheritance: false
                                          inlineNamespaces: false
                                    - gatewayscript:
                                        title: gatewayscript
                                        version: 1.0.0
                                        source: "var bodyResp = apim.getvariable('message.body');\nvar eventsResponse = apim.getvariable('eventsResponse');\n\n if(bodyResp.mailPieces.events[0]==undefined){        //check whether body is coming with events\n    delete bodyResp.mailPieces;\n }\n else if(bodyResp.errors[0] == undefined){          //check whether body is coming with integration footer\n   delete bodyResp.httpCode;\n   delete bodyResp.httpMessage;\n   delete bodyResp.errors;\n }\n \n var statusCode = eventsResponse.status.code;\n var errorCode = '';\n if (statusCode=='200'){\n }else{\n     //Fetch the error code\n     errorCode = eventsResponse.integrationFooter.errors[0].errorCode;\n }\n apim.setvariable('errorCode', errorCode);\n apim.setvariable('bodyResp',bodyResp);\n apim.setvariable('statusCode', statusCode);"
                              version: 1.0.0
                      - otherwise:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: |
                                var verified = 'false';
                                apim.setvariable('verified',verified);
                    version: 1.0.0
                - switch:
                    title: switch
                    case:
                      - condition: "apim.getvariable('request.headers.x-rmg-auth-token') && ((apim.getvariable('statusCode')=='200') || (apim.getvariable('errorCode')=='E1284'))"
                        execute:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: >
                                var claims = apim.getvariable('decoded.claims');

                                var claimsJSON = JSON.parse(claims);

                                var userId = claimsJSON.sub;



                                apim.setvariable('userId',userId);
                          - invoke:
                              title: invokeGet
                              timeout: 60
                              verb: GET
                              cache-response: protocol
                              cache-ttl: 900
                              version: 1.0.0
                              target-url: 'https://0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix:f8c5d0aedee17e9844aaa167dd824d75a0ba6ee77fa37d7eacd886677a07b3d7@0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix.cloudant.com/mail_piece_id/_design/mailPieceId/_search/getMailPieceIds?q=userId:$(userId) AND siteId:$(client.app.id) AND mailPieceId:$(request.parameters.mailPieceId)&sort="-lastUpdateDateTime"&include_docs=true'
                              output: cloudantGetResponse
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: "var msg = apim.getvariable('cloudantGetResponse.body');  \nvar len = msg.rows.length;\nvar action = 'insert';\nif(len==0){\n  action = 'insert';\n  var outJson = {} ;\n  outJson.userId = apim.getvariable('userId');   \n  outJson.siteId = apim.getvariable('client.app.id'); \n  outJson.mailPieceId = apim.getvariable('request.parameters.mailPieceId'); \n  outJson.lastUpdateDateTime = Date.now(); \n}\nelse{\n  var id = msg.rows[0].doc._id;\n  var rev = msg.rows[0].doc._rev;\n  var outJson = {} ;\n  outJson.userId = msg.rows[0].doc.userId;   \n  outJson.siteId = msg.rows[0].doc.siteId; \n  outJson.mailPieceId = msg.rows[0].doc.mailPieceId; \n  outJson.lastUpdateDateTime = Date.now(); \n  action = 'update';\n  apim.setvariable('id',id);\n  apim.setvariable('rev',rev);\n}\n\napim.setvariable('action',action);\nsession.output.write(outJson);\napim.output('application/json');\n"
                          - switch:
                              title: switch
                              case:
                                - condition: "apim.getvariable('action')=='insert'"
                                  execute:
                                    - invoke:
                                        title: invokeInsert
                                        timeout: 60
                                        verb: POST
                                        cache-response: protocol
                                        cache-ttl: 900
                                        version: 1.0.0
                                        target-url: 'https://0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix:f8c5d0aedee17e9844aaa167dd824d75a0ba6ee77fa37d7eacd886677a07b3d7@0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix.cloudant.com/mail_piece_id'
                                        output: cloudantInsertResponse
                                - otherwise:
                                    - invoke:
                                        title: invokeUpdate
                                        timeout: 60
                                        verb: PUT
                                        cache-response: protocol
                                        cache-ttl: 900
                                        version: 1.0.0
                                        target-url: 'https://0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix:f8c5d0aedee17e9844aaa167dd824d75a0ba6ee77fa37d7eacd886677a07b3d7@0fc50620-e2e4-41f5-8ccf-f50e088c35e6-bluemix.cloudant.com/mail_piece_id/$(id)/?rev=$(rev)'
                                        output: cloudantUpdateResponse
                              version: 1.0.0
                      - otherwise: []
                    version: 1.0.0
                - gatewayscript:
                    title: gatewayscript
                    version: 1.0.0
                    source: "var eventsResponse = apim.getvariable('bodyResp');   \r\nvar status = apim.getvariable('statusCode');\r\nvar recaptcha;\r\nvar response;\r\nif(apim.getvariable('verified')){\r\n     response={\r\n         \"httpCode\": \"401\",\r\n         \"httpMessage\": \"Unauthorized\",\r\n         \"moreInformation\": \"captcha validation failed\",\r\n         \"errors\": [\r\n                 {\r\n                          \"errorCode\": \"E0015\",\r\n                          \"errorDescription\": \"Access denied\",\r\n                          \"errorCause\": \"Invalid or expired captcha token\",\r\n                          \"errorResolution\": \"Please request for a new captcha token\"\r\n                 }\r\n         ]\r\n  };\r\n  apim.setvariable('message.status.code','401');\r\n}\r\nelse if(status != 200){\r\n    response = eventsResponse;\r\n    apim.setvariable('message.status.code',status);\r\n    if(apim.getvariable('x-recaptcha-session')){\r\n       recaptcha = apim.getvariable('x-recaptcha-session');  \r\n    }\r\n    else{\r\n        recaptcha = apim.getvariable('request.headers.x-recaptcha-session');\r\n    }\r\n}\r\nelse {\r\n    \r\n    if(apim.getvariable('x-recaptcha-session')){\r\n       recaptcha = apim.getvariable('x-recaptcha-session');  \r\n    }\r\n    else{\r\n        recaptcha = apim.getvariable('request.headers.x-recaptcha-session');\r\n    }\r\n    response = eventsResponse;\r\n    apim.setvariable('message.status.code','200');\r\n}\r\napim.setvariable('message.body',response); \r\napim.output('application/json');\r\ncreateCookie('recaptcha-session',recaptcha,900);\r\n\r\n\r\nfunction createCookie(name,value,secs) {\r\n    var expires = \"\";\r\n    if (secs) {\r\n        var date = new Date();\r\n        date.setTime(date.getTime() + (secs*1000));\r\n        expires = \"; expires=\" + date.toUTCString();\r\n    }\r\n    var cookie = name + \"=\" + value + expires + \"; path=/\";\r\n    apim.setvariable('message.headers.Set-Cookie',cookie);\r\n};\r\n\r\nfunction readCookie(name) {\r\n    var nameEQ = name + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for(var i=0;i < ca.length;i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction eraseCookie(name) {\r\n    createCookie(name,\"\",-1);\r\n};\r\n\r\n"
            - operations:
                - signatureimage
              execute:
                - switch:
                    title: switch
                    case:
                      - condition: "apim.getvariable('isError')==true"
                        execute:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: |-
                                var errResp = apim.getvariable('errResp');
                                apim.setvariable('message.status.code','401');
                                apim.setvariable('message.body', errResp);
                                apim.output('application/json');
                      - otherwise:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: "var cookie = apim.getvariable('request.headers.cookie'); \r\nvar cookieGet = readCookie('recaptcha-session',cookie);\r\n\r\nfunction readCookie(key,cookie)\r\n{\r\n    var result;\r\n    return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(cookie)) ? (result[1]) : null;\r\n};\r\n\r\napim.setvariable('cookieGet',cookieGet);"
                          - jwt-validate:
                              title: jwt-validate
                              jwt: cookieGet
                              output-claims: ''
                              version: 1.0.0
                              iss-claim: apiconnect
                              jws-jwk: hs256-key
                              aud-claim: TAPIv2
                          - invoke:
                              title: invokeSignatureImage
                              timeout: 60
                              verb: GET
                              cache-response: time-to-live
                              version: 1.0.0
                              target-url: 'http://129.185.160.215:8088/mailpieces/v2/$(request.parameters.mailPieceId)/signatureimage'
                              cache-ttl: 60
                    version: 1.0.0
          otherwise: []
          version: 1.0.0
      - activity-log:
          title: activity-log
          content: payload
          error-content: payload
          version: 1.0.0
    catch: []
  phase: realized
  catalogs: {}
  properties:
    backsideClientSecret:
      value: H3tM5vC6hX6wD0bV4aH0aM6iU1xQ6gI8xR1iJ6sA6bJ2sG6oA1
      description: ''
      encoded: false
    backsideClientId:
      value: 2bfb8422-ac9c-46d2-88cf-3846c63e9985
      description: ''
      encoded: false
    TrackingAPI V2 B2B Browser endpoint:
      value: 'https://api.royalmail.net/'
      description: End point for invoking Tracking API V2 B2B edition.
      encoded: false
  gateway: datapower-gateway
paths:
  '/user/{userId}/history/{siteId}':
    get:
      responses:
        '200':
          description: 200 OK
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/rtiResponse'
        '400':
          description: 4XX and 5XX All client and server errors
          schema:
            $ref: '#/definitions/errorResponse'
      parameters:
        - name: userId
          type: string
          required: true
          in: path
          description: User identity
        - name: limit
          type: number
          required: false
          in: query
          description: number of latest mailPieceIds
          format: double
        - $ref: '#/parameters/X-RMG-Auth-Token'
        - $ref: '#/parameters/X-RMG-Language'
        - name: siteId
          type: string
          required: true
          in: path
          description: siteid is X-IBM-Client-Id
        - $ref: '#/parameters/Origin'
      description: Get list of recently tracked mailPieceIds for a specific user
      summary: Get  mailPieceIds for a given user
      security:
        - Client-Id: []
    delete:
      responses:
        '200':
          description: 200 OK
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/rtiResponse'
        '400':
          description: 4XX and 5XX All client and server errors
          schema:
            $ref: '#/definitions/errorResponse'
      parameters:
        - name: userId
          type: string
          required: true
          in: path
          description: User identity
        - name: mailPieceId
          type: array
          required: true
          in: query
          description: 1D or 2D barcode tracking number of the mail item being queried.
          items:
            type: string
        - name: siteId
          type: string
          required: true
          in: path
          description: siteid is X-IBM-Client-Id
        - $ref: '#/parameters/X-RMG-Language'
        - $ref: '#/parameters/X-RMG-Auth-Token'
        - $ref: '#/parameters/Origin'
      description: Delete from the list of recently tracked mailPieceIds for a specific user
      security:
        - Client-Id: []
      summary: delete mailPieceIds for a given user
  '/{mailPieceId}/events':
    get:
      summary: get events details for a queried mailPieceId
      description: "The behaviour of the events operation is to provide a history of tracks for a single mail item.\_This operation returns the summary, signature metadata, estimated delivery window and events for a supplied tracking number."
      operationId: events
      parameters:
        - name: mailPieceId
          in: path
          required: true
          description: 1D or 2D barcode tracking number of the mail item being queried.
          type: string
        - $ref: '#/parameters/X-RMG-Language'
        - $ref: '#/parameters/X-RMG-Auth-Token'
        - $ref: '#/parameters/X-recaptcha-response'
        - $ref: '#/parameters/X-recaptcha-session'
        - $ref: '#/parameters/Origin'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: 200 OK
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/eventsSuccessResponse'
        '400':
          description: 4XX and 5XX All client and server errors
          schema:
            $ref: '#/definitions/errorResponse'
      security:
        - Client-Id: []
  /summary:
    get:
      summary: get summary for queried  mailPieceIds
      description: The behaviour of the summary operation is to allow customers to obtain the latest tracking data for a mail item. This operation returns the summary of one or more tracking numbers provided in the request. This operation only allows a maximum of 30 tracking numbers to be provided in the mailPieceId query parameter via a comma separated list.
      operationId: summary
      parameters:
        - name: mailPieceId
          in: query
          required: true
          description: Java Web Token generated by API connect provided as RTI response
          type: string
        - $ref: '#/parameters/X-RMG-Language'
        - $ref: '#/parameters/X-RMG-Auth-Token'
        - $ref: '#/parameters/Origin'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: 200 OK
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/summarySuccessResponse'
        '400':
          description: 4XX and 5XX All client and server errors
          schema:
            $ref: '#/definitions/summaryErrorResponse'
      security:
        - Client-Id: []
  '/{mailPieceId}/signatureimage':
    get:
      summary: get signatureimage for a queried mailPieceId
      description: The signature operation provides the details captured at the point of delivery as proof that delivery has occurred. Note that a proof of delivery is only captured by the delivery track for those service offerings that require a signature on delivery.
      operationId: signatureimage
      parameters:
        - name: mailPieceId
          in: path
          required: true
          description: 1D or 2D barcode tracking number of the mail item being queried.
          type: string
        - $ref: '#/parameters/Origin'
        - $ref: '#/parameters/Cookie'
      responses:
        '200':
          description: 200 OK
          headers:
            Content-Type:
              type: string
            Cache-Control:
              type: string
          schema:
            type: object
        '400':
          description: 4XX and 5XX All client and server errors
          schema:
            $ref: '#/definitions/errorResponse'
      security:
        - Client-Id: []
      consumes:
        - application/json
      produces:
        - image/png
        - image/svg+xml
definitions:
  eventsSuccessOutput:
    properties:
      mailPieces:
        $ref: '#/definitions/eventsMailPiecesDef'
      integrationFooter:
        $ref: '#/definitions/integrationFooterDef'
    additionalProperties: false
  jwtInvalidError:
    properties:
      message:
        type: string
        description: The error message
    additionalProperties: false
    required:
      - message
  integrationFooterDef:
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/errorsDef'
        description: Repeating node of Error messages
    additionalProperties: false
  summarySuccessOutput:
    properties:
      mailPieces:
        type: array
        items:
          $ref: '#/definitions/summaryMailPiecesDef'
      integrationFooter:
        $ref: '#/definitions/integrationFooterDef'
    additionalProperties: false
  X-RMG-Auth-TokenDef:
    properties:
      sub:
        type: string
        description: userId
      iss:
        type: string
        description: eBusiness
      audience:
        type: string
        description: TAPIv2
      exp:
        type: string
        description: '{exp} is in the future'
    additionalProperties: false
  subLinksSignatureimageDef:
    properties:
      href:
        type: string
        description: URL link to redelivery API
        example: /mailpieces/v2/JX009814815GB/signatureimage
      title:
        type: string
        description: Title of the link
        example: Signature Image
      description:
        type: string
        description: Description of the link
        example: Get Signature image
    additionalProperties: false
    required:
      - href
      - title
      - description
  mymailPiecesJWTDef:
    properties:
      rtiOrderedList:
        type: array
        items:
          $ref: '#/definitions/mymailPiecesDef'
        description: list of mailPieceIds
      sub:
        type: string
        description: X-RMG-Auth-Token.userid
      iss:
        type: string
        description: apiconnect
      audience:
        type: string
        description: TAPIv2
      exp:
        type: string
        description: X-RMG-Auth-Token.exp
    additionalProperties: false
    description: JWT generated by api connect returned as part RTI GET response operation.
  mymailPiecesDef:
    properties:
      mailPieceId:
        type: string
    additionalProperties: false
    description: Latest Mail Piece Ids for given user retrieved from cloudantDB
  rtiDef:
    properties:
      lastAccessedTimestamp:
        type: string
      mailPieceId:
        type: string
    additionalProperties: false
  rtiResponse:
    properties:
      mpDetails:
        type: array
        items:
          $ref: '#/definitions/rtiDef'
        description: array of mailPieceIds and last accessed time stamp
      rtiOrderedList:
        type: string
        description: API connect generated jwt encoded(mymailpiecesJWTDef)
    additionalProperties: false
  summaryErrorResponse:
    properties:
      mailPieces:
        type: array
        items:
          $ref: '#/definitions/mailPieceIdDef'
      httpCode:
        type: string
        description: HTTP status code associated with the error condition
        example: '404'
      httpMessage:
        type: string
        description: HTTP status description associated with the error condition
        example: Not Found
      moreinformation:
        type: string
        description: Description of the error condition
      errors:
        type: array
        items:
          $ref: '#/definitions/errorsDef'
    additionalProperties: false
    required:
      - httpCode
      - httpMessage
  errorResponse:
    properties:
      httpCode:
        type: string
        description: HTTP error code.  Please note that this will only be populated in the event of an error condition.
        example: ''
      httpMessage:
        type: string
        description: HTTP error code description. Please note that this will only be populated in the event of an error condition.
        example: ''
      moreInformation:
        type: string
        description: Information relating to the error condition.
      errors:
        type: array
        items:
          $ref: '#/definitions/errorsDef'
    additionalProperties: false
    required:
      - httpCode
      - httpMessage
  subLinksEventsDef:
    properties:
      href:
        type: string
        description: Relative URL link for event information
        example: /mailpieces/v2/FQ087430672GB/events
      title:
        type: string
        description: Title of the link
        example: Events
      description:
        type: string
        description: Description of the link
        example: Get events
    additionalProperties: false
    description: Container for events link information
    required:
      - href
      - title
      - description
  subLinksRedeliveryDef:
    properties:
      href:
        type: string
        description: Relative URL link for redelivery
        example: /personal/receiving-mail/redelivery
      title:
        type: string
        description: Title of the link
        example: Redelivery
      description:
        type: string
        description: Description of the link
        example: Book a redelivery
    additionalProperties: false
    description: Container for redelivery link information
    required:
      - href
      - title
      - description
  subLinksSignatureDef:
    properties:
      href:
        type: string
        example: /mailpieces/v2/090367574000000FE1E1B/signature
        description: Relative URL link for signature information
      title:
        type: string
        example: Signature
        description: Title of the link
      description:
        type: string
        example: Get signature
        description: Description of the link
    additionalProperties: false
    required:
      - href
      - title
      - description
    description: Container for signature link information
  mailPieceIdDef:
    properties:
      mailPieceId:
        type: string
        description: 1D or 2D Barcode
        example: 090367574000000FE1E1B
      status:
        type: string
        description: HTTP status code specific to the item
        example: '404'
    additionalProperties: false
  summarySuccessResponse:
    properties:
      mailPieces:
        type: array
        items:
          $ref: '#/definitions/summaryMailPiecesDef'
        description: Repeating Node of Mail Piece Data
    additionalProperties: true
    description: 200 OK response for summary Operation
  errorsDef:
    properties:
      errorCode:
        type: string
        description: Code associated with the error condition
        example: E1142
      errorDescription:
        type: string
        description: Description of the error condition
        example: "Barcode reference $mailPieceId isn't recognised"
      errorCause:
        type: string
        description: Cause of the error (if known)
        example: A mail item with that barcode cannot be located
      errorResolution:
        type: string
        description: Description of the resolution and action required to correct the error
        example: Check barcode and resubmit
    additionalProperties: false
    description: Array containing error information.
  summaryLinksDef:
    properties:
      events:
        $ref: '#/definitions/subLinksEventsDef'
    additionalProperties: false
    description: Object containing API links
  summaryMailPiecesDef:
    additionalProperties: false
    description: ''
    properties:
      mailPieceId:
        type: string
        description: 1D or 2D barcode provided in the API request
        example: 090367574000000FE1E1B
      status:
        type: string
        description: HTTP status code associated with the provision of mail piece summary information
        example: '200'
      carrierShortName:
        type: string
        description: Short name of the carrier
        example: RM
      carrierFullName:
        type: string
        description: Full name of the carrier
        example: Royal Mail Group Ltd
      summary:
        $ref: '#/definitions/allSummaryDef'
      links:
        $ref: '#/definitions/summaryLinksDef'
      error:
        $ref: '#/definitions/errorsDef'
    required:
      - mailPieceId
      - status
  eventsSuccessResponse:
    properties:
      mailPieces:
        $ref: '#/definitions/eventsMailPiecesDef'
    additionalProperties: true
    description: 200 OK Response for events Operation
    required:
      - mailPieces
  eventsMailPiecesDef:
    additionalProperties: false
    properties:
      mailPieceId:
        type: string
        description: 1D or 2D barcode provided in the API request
        example: 090367574000000FE1E1B
      carrierShortName:
        type: string
        description: Short name of the carrier
        example: RM
      carrierFullName:
        type: string
        description: Full name of the carrier
        example: Royal Mail Group Ltd
      summary:
        $ref: '#/definitions/allSummaryDef'
      signature:
        $ref: '#/definitions/eventsSignatureDef'
      estimatedDelivery:
        $ref: '#/definitions/eventsEstimatedDeliveryDef'
      events:
        type: array
        items:
          $ref: '#/definitions/eventsEventsDef'
        description: Array containing mail piece event information
      links:
        $ref: '#/definitions/eventsLinksDef'
    required:
      - mailPieceId
    description: Object containing tracking information for the requested mail item. This will only be provided in the event that no error information is returned.
  eventsLinksDef:
    properties:
      summary:
        $ref: '#/definitions/subLinksSummaryDef'
      signature:
        $ref: '#/definitions/subLinksSignatureDef'
      signatureimage:
        $ref: '#/definitions/subLinksSignatureimageDef'
      redelivery:
        $ref: '#/definitions/subLinksRedeliveryDef'
    additionalProperties: false
    description: Object containing API links
  subLinksSummaryDef:
    properties:
      href:
        type: string
        description: Relative URL link for operation information
        example: /mailpieces/v2/summary?mailPieceId=090367574000000FE1E1B
      title:
        type: string
        description: Title of the link
        example: Summary
      description:
        type: string
        description: Description of the link
        example: Get summary
    required:
      - href
      - title
      - description
    additionalProperties: false
  allInternationalPostalProviderDef:
    properties:
      url:
        type: string
        description: URL link to website of delivery provider for international parcels
        example: 'https://www.royalmail.com/track-your-item'
      title:
        type: string
        description: Name of the international postal organisation
        example: Royal Mail Group Ltd
      description:
        type: string
        description: Description of the international postal organisation
        example: Royal Mail Group Ltd
    required:
      - url
      - title
      - description
    description: Object containing details of  international postal organisation
    additionalProperties: false
  eventsEventsDef:
    type: object
    properties:
      eventCode:
        type: string
        description: Code associated with the mail piece event
        example: EVNMI
      eventName:
        type: string
        description: Name of the event
        example: Forwarded - Mis-sort
      eventDateTime:
        type: string
        description: 'Date and time of the event in the format: ISO8601  -   YYYY-MM-DDThh:mm:ss±hh:mm'
        example: '2016-10-20T10:04:00+01:00'
        format: date-time
      locationName:
        type: string
        description: Location name associated with the mail piece event
        example: Stafford DO
    required:
      - eventDateTime
    description: Repeating node of events
    additionalProperties: false
  eventsEstimatedDeliveryDef:
    properties:
      date:
        type: string
        description: 'Date of the estimated delivery window in the format: ISO8601 YYYY-MM-DD.'
        example: '2017-02-20'
        format: date-time
      startOfEstimatedWindow:
        type: string
        description: 'Start time of the estimated delivery window in the format: hh:mm:ss±hh:mm'
        example: '08:00:00+01:00'
      endOfEstimatedWindow:
        type: string
        description: 'End time of the estimated delivery window in the format: hh:mm:ss±hh:mm'
        example: '11:00:00+01:00'
    required:
      - date
    description: Object containing the estimated delivery data
    additionalProperties: false
  eventsSignatureDef:
    properties:
      recipientName:
        type: string
        description: Name of the person who provided the signature
        example: Simon
      signatureDateTime:
        type: string
        description: 'Date and time the signature was captured in the following format: ISO8601  YYYY-MM-DDThh:mm:ss±hh:mm'
        example: '2016-10-20T10:04:00+01:00'
        format: date-time
      imageId:
        type: string
        description: Identifier associated with the signature image
        example: '001234'
    required:
      - signatureDateTime
    description: Object containing signature metadata data
    additionalProperties: false
  allSummaryDef:
    properties:
      uniqueItemId:
        type: string
        description: 2D barcode for the mail piece
        example: 090367574000000FE1E1B
      oneDBarcode:
        type: string
        description: 1D barcode for the mail piece
        example: FQ087430672GB
      productId:
        type: string
        description: Identifier for the tracked product
        example: SD2
      productName:
        type: string
        description: Name of the tracked product
        example: Special Delivery Guaranteed
      productDescription:
        type: string
        description: Description of tracked product
        example: Our guaranteed next working day service with tracking and a signature on delivery
      productCategory:
        type: string
        description: Category for tracked product
        example: NON-INTERNATIONAL
      destinationCountryCode:
        type: string
        description: Destination country code
        example: GBR
      destinationCountryName:
        type: string
        description: Destination country name
        example: United Kingdom of Great Britain and Northern Ireland
      originCountryCode:
        type: string
        description: Origin Country Code
        example: GBR
      originCountryName:
        type: string
        description: Origin Country Name
        example: United Kingdom of Great Britain and Northern Ireland
      lastEventCode:
        type: string
        description: Code associated with the latest mail piece event
        example: EVNMI
      lastEventName:
        type: string
        description: Name of the latest mail piece event
        example: Forwarded - Mis-sort
      lastEventDateTime:
        type: string
        description: 'Date timestamp associated with the latest mail piece event in the following format: ISO8601  YYYY-MM-DDThh:mm:ss±hh:mm'
        example: '2016-10-20T10:04:00+01:00'
        format: date-time
      lastEventLocationName:
        type: string
        description: Location name associated with the latest mail piece event
        example: Stafford DO
      statusDescription:
        type: string
        description: Status description associated with the latest mail piece event
        example: "It's being redirected"
      statusCategory:
        type: string
        description: Status category associated with the latest mail piece event
        example: IN TRANSIT
      statusHelpText:
        type: string
        description: Status help text associated with the latest mail piece event
        example: 'The item is in transit and a confirmation will be provided on delivery. For more information on levels of tracking by service, please see Sending Mail.'
      summaryLine:
        type: string
        description: Summary message for mail item’s last tracking scan
        example: Item FQ087430672GB was forwarded to the Delivery Office on 2016-10-20.
      internationalPostalProvider:
        $ref: '#/definitions/allInternationalPostalProviderDef'
    description: Object containing mail piece summary data
    additionalProperties: false
tags: []
security:
  - Client-Id: []
parameters:
  X-RMG-Language:
    name: X-RMG-Language
    type: string
    required: false
    in: header
    description: Optional default english
  X-RMG-Auth-Token:
    name: X-RMG-Auth-Token
    type: string
    required: false
    in: header
    description: 'Java Web Token generated by eBusiness and passed in header, when a user successfully authenticated'
  X-recaptcha-response:
    name: X-recaptcha-response
    type: string
    required: false
    in: header
    description: Google recaptcha response
  X-recaptcha-session:
    name: X-recaptcha-session
    type: string
    required: false
    in: header
    description: 'Google Catpcha session Token, post successfull validation'
  Origin:
    name: Origin
    type: string
    required: true
    in: header
    description: 'Check value matches permitted web sites *.royalmail.com and *.postoffice.co.uk'
  Cookie:
    name: Cookie
    type: string
    required: false
    in: header
    description: 'Check Cookie:recaptcha-session == Header:X-recaptcha-session'
  Accept:
    name: Accept
    type: string
    required: false
    in: header
    description: Pass though; used for markdown
  Cache-Control:
    name: Cache-Control
    type: string
    required: false
    in: header
    description: Response header
  Content-Type:
    name: Content-Type
    type: string
    required: true
    in: header
    description: Response header
basePath: /mailpiece/v2
