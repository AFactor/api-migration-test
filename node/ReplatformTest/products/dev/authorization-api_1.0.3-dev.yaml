swagger: '2.0'
info:
  x-ibm-name: authorization-api
  title: Authorization API
  version: 1.0.3-dev
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientSecret:
    type: apiKey
    description: ''
    in: header
    name: X-IBM-Client-Secret
  clientId:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
security:
  - clientId: []
    clientSecret: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
      - set-variable:
          title: set-variable
          actions:
            - value: '{ "alg": "HS256",   "kty": "oct",   "use": "sig",   "k": "ycsjclSb2dcdnJ-VobQLWeXBYUsFsPS8MddhqQ9N0d1CWWMms0FQH70SJQX2RcrTamhzyNniXtbLf47qDLJ6JI75oU-uUTHstpyzON1FQtpHIGajMaScIn4ZdT9pzgVwR7Ll1y_9wGBLeLW5Pqy0MhQDUO62BTB8hJ6CE8S9y4WwwrPD5Zj-jNDlSeZyAFnaa573SyITxwgDuMHgmIuKkt02ByWhS2mrTKCSOfdPIP_QdUPqbyixOji8A5fsoO65gAxzxvVfZNN4JgwHGRfllj5lH1nljL0MYlWGJ7i5iqvxp0-EAKgiHf8QsRWNXbpp03mGCXsz2XpnO6P9Kx7abw",   "kid": "hs256-key" }'
              add: hs256-key
          version: 1.0.0
      - switch:
          title: switch
          case:
            - condition: "apim.getvariable('request.parameters.userId')"
              execute:
                - gatewayscript:
                    title: gatewayscript
                    version: 1.0.0
                    source: "var a ='apimonitor';\nvar b = apim.getvariable('request.parameters.userId');\nvar c = apim.getvariable('request.headers.origin');\nif (b == a && c.endsWith(\".ibmcloud.com\")){\nvar Aud = \"TAPIv2\";\nvar iss = \"eBusiness\";\nvar iss1 = \"apiconnect\";\nvar sub = apim.getvariable('request.parameters.userId');\napim.setvariable('sub',sub);\napim.setvariable('iss',iss);\napim.setvariable('Aud',Aud);\napim.setvariable('iss1',iss1);\n}\nelse {\n var errorResponse = {\n\t\t\"httpCode\": \"401\",\n\t\t\"httpMessage\": \"Unauthorized\",\n\t\t\"moreInformation\": \"userId not supported\"\n\t}; \n apim.setvariable('errorResponse',errorResponse);\n}"
                - switch:
                    title: switch
                    case:
                      - condition: "apim.getvariable('errorResponse')"
                        execute:
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: >-
                                apim.setvariable('message.body',apim.getvariable('errorResponse'));

                                apim.setvariable('message.status.code','401');

                                apim.output('application/json');
                      - otherwise:
                          - jwt-generate:
                              title: jwt-generate
                              iss-claim: iss
                              exp-claim: 30
                              version: 1.0.0
                              jwt: rmgAuthToken
                              sub-claim: sub
                              jws-jwk: hs256-key
                              jws-alg: HS256
                              aud-claim: Aud
                          - jwt-generate:
                              title: jwt-generate
                              iss-claim: iss1
                              exp-claim: 30
                              version: 1.0.0
                              jwt: recaptchaSession
                              sub-claim: sub
                              aud-claim: Aud
                              jws-jwk: hs256-key
                              jws-alg: HS256
                          - gatewayscript:
                              title: gatewayscript
                              version: 1.0.0
                              source: "var a = apim.getvariable('rmgAuthToken');\nvar b = apim.getvariable('recaptchaSession');\nvar response = {\n     \"rmgAuthToken\" :a,\n      \"recaptchaSession\" :b\n    \n}\napim.setvariable('message.body',response);\n"
                    version: 1.0.0
            - otherwise:
                - gatewayscript:
                    title: gatewayscript
                    version: 1.0.0
                    source: |-
                      var Aud = "TAPIv2";
                      var iss = "eBusiness";
                      apim.setvariable('iss',iss);
                      apim.setvariable('Aud',Aud);
                      var iss1 = "apiconnect";
                      apim.setvariable('iss1',iss1);
                - jwt-generate:
                    title: jwt-generate
                    iss-claim: iss
                    exp-claim: 30
                    version: 1.0.0
                    jwt: rmgAuthToken
                    jws-jwk: hs256-key
                    jws-alg: HS256
                    aud-claim: Aud
                - jwt-generate:
                    title: jwt-generate
                    iss-claim: iss1
                    exp-claim: 30
                    version: 1.0.0
                    jwt: recaptchaSession
                    aud-claim: Aud
                    jws-jwk: hs256-key
                    jws-alg: HS256
                - gatewayscript:
                    title: gatewayscript
                    version: 1.0.0
                    source: "var a = apim.getvariable('rmgAuthToken');\nvar b = apim.getvariable('recaptchaSession');\nvar response = {\n     \"rmgAuthToken\" :a,\n      \"recaptchaSession\" :b\n    \n}\napim.setvariable('message.body',response);\n"
          version: 1.0.0
    catch: []
  phase: realized
  gateway: datapower-gateway
paths:
  /token1:
    get:
      responses:
        '200':
          description: 200 OK
      parameters:
        - name: userId
          type: string
          required: false
          in: query
definitions: {}
tags: []
basePath: /Abhsuye
